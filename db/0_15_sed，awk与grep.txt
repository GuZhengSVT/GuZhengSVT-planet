<html><head></head><body><h2 id="前言"><a href="https://xeonds.github.io/2023/07/10/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/sed%EF%BC%8Cawk%E4%B8%8Egrep/#%E5%89%8D%E8%A8%80" class="headerlink" title="前言"></a>前言</h2><blockquote><p>关于标题：实际上，sed，awk和grep有一个共同的爹叫<strong>ed</strong>。sed和awk的区别是控制指令不太一样，而grep是起源于ed的一个指令：<code>g/re/p</code>，即<strong>全局-正则表达式匹配-打印</strong>，相当于把这个ed指令提取出来专门用于编辑。</p></blockquote><p>之前学了Vim，不过Vim不太容易和其他命令行工具结合实现一些自动化任务。随后我将目光投向了sed和awk，它们二者都满足这个条件：<strong>可以将一个源的数据经过一些预定义的变换，输出到另一个源中</strong>。这其中，我对<code>sed</code>相对更加熟悉一些，awk我感觉可能更复杂一些，而sed只需要正则表达式就行。比如我之前接触到的第一个sed表达式：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#39;s@^\(deb.*stable main\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/apt/termux-main stable main@&#39;</span> <span class="variable">$PREFIX</span>/etc/apt/sources.list</span><br/></pre></td></tr></tbody></table></figure><p>上面那段是termux清华源的换源指令。单就命令格式上来看，我觉得和Vim的<code>%s</code>替换表达式比较接近。</p><p>没接触之前，一直觉得这玩意很神奇；接触后更感觉这东西的设计太棒了，只需要指令，就能完成大段内容的编辑。</p><p>后来接触了正则和Vim之后觉得似曾相识，才发现sed的用法很像Vim的替换指令+正则。而且这一套下来，效率提升真不小。以前做一些爬虫都编辑麻烦，现在直接写个脚本就完事了。比如，我最近为了尝试这三个流编辑器，写了一个爬新闻的脚本：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br/><span class="line"></span><br/><span class="line"><span class="built_in">echo</span> -e <span class="string">&#34;# IT news Today\n\n<span class="subst">$(wget -qO- https://www.ithome.com/block/rank.html | grep -oP &#39;&lt;li&gt;\s*&lt;a\K[^&gt;]+&#39; | awk -F &#39;<span class="string">&#34;&#39; &#39;{print &#34;</span>[<span class="string">&#34;<span class="variable">$2</span>&#34;</span>](<span class="string">&#34;<span class="variable">$6</span>&#34;</span>)</span>&#34;</span>}<span class="string">&#39; | sed &#39;</span>s/^/- /g<span class="string">&#39;)&#34;</span></span><br/></pre></td></tr></tbody></table></figure><p>这是一个简单的单行脚本：借助管道，将wget抓取到的网页直接交由grep，让它使用Perl正则表达式将新闻标题和链接匹配出来，再交由awk将具体的字段分离出来并按照markdown的标准进行加工，最后交由sed使用行编辑模式在每一行前面加上一个<code>- </code>变换为markdown的列表。最后，将输出返回给<code>echo -e</code>，得到加上标题的、完整的输出。</p><p>其实，上面的例子只用grep+sed/awk就行，但是为了表现三个编辑器各自的特点，还是安排它们共同完成了这个变换工作。希望这个例子能给你带来一个粗浅的印象。</p><p>那么，现在就开始正篇吧。</p><h2 id="sed"><a href="https://xeonds.github.io/2023/07/10/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/sed%EF%BC%8Cawk%E4%B8%8Egrep/#sed" class="headerlink" title="sed"></a>sed</h2><p>首先说说sed它爹ed，这玩意是个很经典的行编辑器。不光可以交互编辑（类似于Vim，不过只能通过交互式指令输出操作结果，比如p输出当前行内容之类的），而且还能把操作指令存储下来</p><h3 id="基本介绍"><a href="https://xeonds.github.io/2023/07/10/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/sed%EF%BC%8Cawk%E4%B8%8Egrep/#%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D" class="headerlink" title="基本介绍"></a>基本介绍</h3><p>sed是一个流编辑器，它可以对文本文件或标准输入进行处理和编辑。sed的基本用法是：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/></pre></td><td class="code"><pre><span class="line">sed [options] <span class="string">&#39;script&#39;</span> file</span><br/></pre></td></tr></tbody></table></figure><p>其中，options是一些可选的参数，script是一些sed命令，file是要处理的文本文件。下面是一些常用的options：</p><ul><li><code>-n</code>：只打印匹配到的行，不打印所有行。</li><li><code>-e</code>：可以指定多个script，按顺序执行。</li><li><code>-f</code>：可以从一个文件中读取script。</li><li><code>-i</code>：可以直接修改原文件，而不是输出到标准输出。</li><li><code>-r</code>：可以使用扩展正则表达式。</li></ul><p>sed的script由一些地址和命令组成，地址可以指定要处理的行，命令可以指定要执行的操作。下面是一些常用的地址和命令：</p><ul><li><p>地址可以是一个数字，表示行号，如<code>3</code>表示第三行。</p></li><li><p>地址可以是一个范围，表示行号之间的区间，如<code>3,5</code>表示第三行到第五行。</p></li><li><p>地址可以是一个正则表达式，表示匹配该模式的行，如<code>/^abc/</code>表示以abc开头的行。</p></li><li><p>地址可以是<code>$</code>，表示最后一行。</p></li><li><p>如果不指定地址，默认对所有行进行处理。</p></li><li><p>命令可以是<code>a</code>，表示在当前行后面添加一些内容，如<code>a\newline</code>表示在当前行后面添加一行newline。</p></li><li><p>命令可以是<code>c</code>，表示用新的内容替换当前行，如<code>c\newtext</code>表示用newtext替换当前行。</p></li><li><p>命令可以是<code>d</code>，表示删除当前行，如<code>d</code>表示删除当前行。</p></li><li><p>命令可以是<code>p</code>，表示打印当前行，如<code>p</code>表示打印当前行。</p></li><li><p>命令可以是<code>s</code>，表示用新的内容替换匹配到的内容，如<code>s/old/new/g</code>表示将old替换为new，g表示全局替换。</p></li></ul><h3 id="示例："><a href="https://xeonds.github.io/2023/07/10/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/sed%EF%BC%8Cawk%E4%B8%8Egrep/#%E7%A4%BA%E4%BE%8B%EF%BC%9A" class="headerlink" title="示例："></a>示例：</h3><ul><li>打印1-3行：</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/></pre></td><td class="code"><pre><span class="line">sed -n <span class="string">&#39;1,3p&#39;</span> file.txt</span><br/></pre></td></tr></tbody></table></figure><ul><li>删除1-3行：</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/></pre></td><td class="code"><pre><span class="line">sed <span class="string">&#39;1,3d&#39;</span> file.txt</span><br/></pre></td></tr></tbody></table></figure><ul><li>在所有行前加#：</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/></pre></td><td class="code"><pre><span class="line">sed <span class="string">&#39;s/^/#/g&#39;</span> file.txt</span><br/></pre></td></tr></tbody></table></figure><ul><li>将所有字母大写：</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/></pre></td><td class="code"><pre><span class="line">sed <span class="string">&#39;s/.*/\U&amp;/g&#39;</span> file.txt</span><br/></pre></td></tr></tbody></table></figure><h3 id="参考资料"><a href="https://xeonds.github.io/2023/07/10/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/sed%EF%BC%8Cawk%E4%B8%8Egrep/#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="headerlink" title="参考资料"></a>参考资料</h3><p>¹: <a href="https://www.runoob.com/linux/linux-comm-sed.html">Linux sed 命令 | 菜鸟教程</a><br/>²: <a href="https://zhuanlan.zhihu.com/p/181734158">sed 命令快速入门 - 知乎</a><br/>³: <a href="https://zhuanlan.zhihu.com/p/145661854">sed完全教程 - 知乎</a></p><h2 id="awk"><a href="https://xeonds.github.io/2023/07/10/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/sed%EF%BC%8Cawk%E4%B8%8Egrep/#awk" class="headerlink" title="awk"></a>awk</h2><h2 id="grep"><a href="https://xeonds.github.io/2023/07/10/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/sed%EF%BC%8Cawk%E4%B8%8Egrep/#grep" class="headerlink" title="grep"></a>grep</h2></body></html>