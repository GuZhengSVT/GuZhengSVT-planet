<html><head></head><body><h2 id="Vue篇"><a href="https://mxts.jiujiuer.xyz/2023/07/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/Web%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/#Vue%E7%AF%87" class="headerlink" title="Vue篇"></a>Vue篇</h2><h3 id="关于Slot"><a href="https://mxts.jiujiuer.xyz/2023/07/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/Web%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/#%E5%85%B3%E4%BA%8ESlot" class="headerlink" title="关于Slot"></a>关于Slot</h3><p>Slot，即“插槽”，是Vue的一个很重要的功能。通过插槽，可以将其他的组件“插入”到当前组件的某个槽位。这个机制的优点，就是在保留了子组件的控制的同时，也给父组件保留了一定的内容控制权。比如elementUI，它的很多功能都提供了slot来让我们插入自定义的内容。</p><h4 id="用法"><a href="https://mxts.jiujiuer.xyz/2023/07/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/Web%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/#%E7%94%A8%E6%B3%95" class="headerlink" title="用法"></a>用法</h4><p>它的用法很简单，分两部分。</p><ol><li>组件</li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/></pre></td><td class="code"><pre><span class="line">...</span><br/><span class="line">&lt;slot name=&#34;component-a&#34; :param1=&#34;123&#34;&gt;&lt;/slot&gt;</span><br/><span class="line">...</span><br/></pre></td></tr></tbody></table></figure><ol start="2"><li>父组件</li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/></pre></td><td class="code"><pre><span class="line">&lt;Component&gt;</span><br/><span class="line">&lt;template #component-a=&#34;{ param_1 }&#34;&gt;</span><br/><span class="line">{{ param_1 }}</span><br/><span class="line">&lt;/template&gt;</span><br/><span class="line">&lt;/Component&gt;</span><br/></pre></td></tr></tbody></table></figure><p>上面是完整示例，一个<strong>具名</strong>的<strong>作用域</strong>插槽。它将子组件的一个参数<code>param1</code>通过解构赋值，回传到了父组件的形参<code>param_1</code>中，并在其中渲染出了它的值。同时，父组件将这部分template中的内容传入了子组件中，和子组件的其他部分内容一同渲染。</p><h2 id="Vue-router"><a href="https://mxts.jiujiuer.xyz/2023/07/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/Web%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/#Vue-router" class="headerlink" title="Vue-router"></a>Vue-router</h2><h3 id="历史模式的问题"><a href="https://mxts.jiujiuer.xyz/2023/07/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/Web%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/#%E5%8E%86%E5%8F%B2%E6%A8%A1%E5%BC%8F%E7%9A%84%E9%97%AE%E9%A2%98" class="headerlink" title="历史模式的问题"></a>历史模式的问题</h3><p><code>Vue-router</code>支持多种历史模式。现在较为常用的一种就是<code>HTML5</code>模式。该模式下，浏览器显示的链接和正常的url一致，非常漂亮。但是需要后端路由的配置，否则会出现刷新页面出现404的问题。</p><p>除了<code>HTML5</code>模式，还有一种历史模式，叫做<code>hash</code>模式。它会在url中添加一个<code>#</code>来解决这个问题：<code>#</code>后面的部分在刷新时不会被后端认为是任何后端路由，因此也就不存在刷新后出现404的问题。</p><p>这一部分的配置在<code>createRouter()</code>的参数中进行配置：</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/><span class="line">9</span><br/></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> { createRouter, createWebHashHistory, createWebHistory } <span class="keyword">from</span> <span class="string">&#34;vue-router&#34;</span>;</span><br/><span class="line"></span><br/><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">createRouter</span>({</span><br/><span class="line">  <span class="comment">// hash模式，无需后端配置</span></span><br/><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHashHistory</span>(),</span><br/><span class="line">  <span class="comment">// html5模式，需要后端配置</span></span><br/><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(),</span><br/><span class="line">  <span class="attr">routes</span>: [ ... ]</span><br/><span class="line">});</span><br/></pre></td></tr></tbody></table></figure><h2 id="Vuex"><a href="https://mxts.jiujiuer.xyz/2023/07/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/Web%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/#Vuex" class="headerlink" title="Vuex"></a>Vuex</h2><p>这是Vue官方出的状态管理插件。它用来管理整个单页程序的所有数据。</p><h3 id="项目架构"><a href="https://mxts.jiujiuer.xyz/2023/07/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/Web%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/#%E9%A1%B9%E7%9B%AE%E6%9E%B6%E6%9E%84" class="headerlink" title="项目架构"></a>项目架构</h3><p>使用Vuex时，最佳实践一般是使用模块来组织各个部分的数据。假设我们的项目的store目录结构如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/></pre></td><td class="code"><pre><span class="line">- store</span><br/><span class="line">  - modules</span><br/><span class="line">    - module1.js</span><br/><span class="line">    - module2.js</span><br/><span class="line">    - module3.js</span><br/><span class="line">  - index.js</span><br/></pre></td></tr></tbody></table></figure><p>那么，我们可以在每个模块中这么定义数据：</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/><span class="line">9</span><br/><span class="line">10</span><br/><span class="line">11</span><br/><span class="line">12</span><br/><span class="line">13</span><br/><span class="line">14</span><br/><span class="line">15</span><br/><span class="line">16</span><br/><span class="line">17</span><br/><span class="line">18</span><br/><span class="line">19</span><br/><span class="line">20</span><br/><span class="line">21</span><br/><span class="line">22</span><br/></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> auth = {</span><br/><span class="line">  <span class="attr">state</span>: {</span><br/><span class="line">    <span class="attr">token</span>: <span class="literal">null</span></span><br/><span class="line">  },</span><br/><span class="line">  <span class="attr">mutations</span>: {</span><br/><span class="line">    <span class="title function_">SET_TOKEN</span>(<span class="params">state, token</span>) {</span><br/><span class="line">      state.<span class="property">token</span> = token;</span><br/><span class="line">    }</span><br/><span class="line">  },</span><br/><span class="line">  <span class="attr">actions</span>: {</span><br/><span class="line">    <span class="title function_">setToken</span>(<span class="params">{ commit }, token</span>) {</span><br/><span class="line">      <span class="title function_">commit</span>(<span class="string">&#34;SET_TOKEN&#34;</span>, token);</span><br/><span class="line">    }</span><br/><span class="line">  },</span><br/><span class="line">  <span class="attr">getters</span>: {</span><br/><span class="line">    <span class="title function_">getToken</span>(<span class="params">state</span>) {</span><br/><span class="line">      <span class="keyword">return</span> state.<span class="property">token</span>;</span><br/><span class="line">    }</span><br/><span class="line">  }</span><br/><span class="line">};</span><br/><span class="line"></span><br/><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> auth;</span><br/></pre></td></tr></tbody></table></figure><p>然后在index.js中这么导入模块：</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/><span class="line">9</span><br/><span class="line">10</span><br/><span class="line">11</span><br/><span class="line">12</span><br/></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#39;vue&#39;</span>;</span><br/><span class="line"><span class="keyword">import</span> <span class="title class_">Vuex</span> <span class="keyword">from</span> <span class="string">&#39;vuex&#39;</span>;</span><br/><span class="line"><span class="keyword">import</span> modules <span class="keyword">from</span> <span class="string">&#39;./modules&#39;</span>;</span><br/><span class="line"></span><br/><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Vuex</span>);</span><br/><span class="line"></span><br/><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> <span class="title class_">Vuex</span>.<span class="title class_">Store</span>({</span><br/><span class="line">  modules,</span><br/><span class="line">  <span class="attr">plugins</span>: [localStoragePlugin]</span><br/><span class="line">});</span><br/><span class="line"></span><br/><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store;</span><br/></pre></td></tr></tbody></table></figure><p>这种结构便于我们维护前端的数据模型。</p><h2 id="Vite"><a href="https://mxts.jiujiuer.xyz/2023/07/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/Web%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/#Vite" class="headerlink" title="Vite"></a>Vite</h2><h3 id="pathResolve"><a href="https://mxts.jiujiuer.xyz/2023/07/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/Web%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/#pathResolve" class="headerlink" title="pathResolve"></a>pathResolve</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/><span class="line">9</span><br/><span class="line">10</span><br/><span class="line">11</span><br/><span class="line">12</span><br/><span class="line">13</span><br/><span class="line">14</span><br/><span class="line">15</span><br/><span class="line">16</span><br/><span class="line">17</span><br/><span class="line">18</span><br/><span class="line">19</span><br/><span class="line">20</span><br/><span class="line">21</span><br/><span class="line">22</span><br/><span class="line">23</span><br/><span class="line">24</span><br/></pre></td><td class="code"><pre><span class="line">import { defineConfig } from &#34;vite&#34;;</span><br/><span class="line">import vue from &#34;@vitejs/plugin-vue&#34;;</span><br/><span class="line">import path from &#34;path&#34;;</span><br/><span class="line">import AutoImport from &#34;unplugin-auto-import/vite&#34;;</span><br/><span class="line">import Components from &#34;unplugin-vue-components/vite&#34;;</span><br/><span class="line">import { ElementPlusResolver } from &#34;unplugin-vue-components/resolvers&#34;;</span><br/><span class="line"></span><br/><span class="line">// https://vitejs.dev/config/</span><br/><span class="line">export default defineConfig({</span><br/><span class="line">  plugins: [</span><br/><span class="line">    vue(),</span><br/><span class="line">    AutoImport({</span><br/><span class="line">      resolvers: [ElementPlusResolver()],</span><br/><span class="line">    }),</span><br/><span class="line">    Components({</span><br/><span class="line">      resolvers: [ElementPlusResolver()],</span><br/><span class="line">    }),</span><br/><span class="line">  ],</span><br/><span class="line">  resolve: {</span><br/><span class="line">    alias: {</span><br/><span class="line">      &#34;@&#34;: path.resolve(__dirname, &#34;./src&#34;),</span><br/><span class="line">    },</span><br/><span class="line">  },</span><br/><span class="line">});</span><br/></pre></td></tr></tbody></table></figure><h2 id="ElementUI篇"><a href="https://mxts.jiujiuer.xyz/2023/07/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/Web%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/#ElementUI%E7%AF%87" class="headerlink" title="ElementUI篇"></a>ElementUI篇</h2><h3 id="完整引入"><a href="https://mxts.jiujiuer.xyz/2023/07/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/Web%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/#%E5%AE%8C%E6%95%B4%E5%BC%95%E5%85%A5" class="headerlink" title="完整引入"></a>完整引入</h3><p>如果你对打包后的文件大小不是很在乎，那么使用完整导入会更方便。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/><span class="line">9</span><br/><span class="line">10</span><br/></pre></td><td class="code"><pre><span class="line">// main.ts</span><br/><span class="line">import { createApp } from &#39;vue&#39;</span><br/><span class="line">import ElementPlus from &#39;element-plus&#39;</span><br/><span class="line">import &#39;element-plus/dist/index.css&#39;</span><br/><span class="line">import App from &#39;./App.vue&#39;</span><br/><span class="line"></span><br/><span class="line">const app = createApp(App)</span><br/><span class="line"></span><br/><span class="line">app.use(ElementPlus)</span><br/><span class="line">app.mount(&#39;#app&#39;)</span><br/></pre></td></tr></tbody></table></figure><ul><li>Volar 支持<a href="https://element-plus.gitee.io/zh-CN/guide/quickstart.html#volar-%E6%94%AF%E6%8C%81">#</a></li></ul><p>如果您使用 Volar，请在 <code>tsconfig.json</code> 中通过 <code>compilerOptions.type</code> 指定全局组件类型。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/></pre></td><td class="code"><pre><span class="line">// tsconfig.json</span><br/><span class="line">{</span><br/><span class="line">  &#34;compilerOptions&#34;: {</span><br/><span class="line">    // ...</span><br/><span class="line">    &#34;types&#34;: [&#34;element-plus/global&#34;]</span><br/><span class="line">  }</span><br/><span class="line">}</span><br/></pre></td></tr></tbody></table></figure><h3 id="自动导入"><a href="https://mxts.jiujiuer.xyz/2023/07/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/Web%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/#%E8%87%AA%E5%8A%A8%E5%AF%BC%E5%85%A5" class="headerlink" title="自动导入"></a>自动导入</h3><p>首先你需要安装<code>unplugin-vue-components</code> 和 <code>unplugin-auto-import</code>这两款插件</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/></pre></td><td class="code"><pre><span class="line">npm install -D unplugin-vue-components unplugin-auto-import</span><br/></pre></td></tr></tbody></table></figure><p>然后把下列代码插入到你的 <code>Vite</code> 或 <code>Webpack</code> 的配置文件中</p><h4 id="Vite-1"><a href="https://mxts.jiujiuer.xyz/2023/07/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/Web%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/#Vite-1" class="headerlink" title="Vite"></a>Vite</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/><span class="line">9</span><br/><span class="line">10</span><br/><span class="line">11</span><br/><span class="line">12</span><br/><span class="line">13</span><br/><span class="line">14</span><br/><span class="line">15</span><br/><span class="line">16</span><br/><span class="line">17</span><br/><span class="line">18</span><br/></pre></td><td class="code"><pre><span class="line">// vite.config.ts</span><br/><span class="line">import { defineConfig } from &#39;vite&#39;</span><br/><span class="line">import AutoImport from &#39;unplugin-auto-import/vite&#39;</span><br/><span class="line">import Components from &#39;unplugin-vue-components/vite&#39;</span><br/><span class="line">import { ElementPlusResolver } from &#39;unplugin-vue-components/resolvers&#39;</span><br/><span class="line"></span><br/><span class="line">export default defineConfig({</span><br/><span class="line">  // ...</span><br/><span class="line">  plugins: [</span><br/><span class="line">    // ...</span><br/><span class="line">    AutoImport({</span><br/><span class="line">      resolvers: [ElementPlusResolver()],</span><br/><span class="line">    }),</span><br/><span class="line">    Components({</span><br/><span class="line">      resolvers: [ElementPlusResolver()],</span><br/><span class="line">    }),</span><br/><span class="line">  ],</span><br/><span class="line">})</span><br/></pre></td></tr></tbody></table></figure><h4 id="Webpack"><a href="https://mxts.jiujiuer.xyz/2023/07/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/Web%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/#Webpack" class="headerlink" title="Webpack"></a>Webpack</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/><span class="line">9</span><br/><span class="line">10</span><br/><span class="line">11</span><br/><span class="line">12</span><br/><span class="line">13</span><br/><span class="line">14</span><br/><span class="line">15</span><br/><span class="line">16</span><br/></pre></td><td class="code"><pre><span class="line">// webpack.config.js</span><br/><span class="line">const AutoImport = require(&#39;unplugin-auto-import/webpack&#39;)</span><br/><span class="line">const Components = require(&#39;unplugin-vue-components/webpack&#39;)</span><br/><span class="line">const { ElementPlusResolver } = require(&#39;unplugin-vue-components/resolvers&#39;)</span><br/><span class="line"></span><br/><span class="line">module.exports = {</span><br/><span class="line">  // ...</span><br/><span class="line">  plugins: [</span><br/><span class="line">    AutoImport({</span><br/><span class="line">      resolvers: [ElementPlusResolver()],</span><br/><span class="line">    }),</span><br/><span class="line">    Components({</span><br/><span class="line">      resolvers: [ElementPlusResolver()],</span><br/><span class="line">    }),</span><br/><span class="line">  ],</span><br/><span class="line">}</span><br/></pre></td></tr></tbody></table></figure><p>想了解更多打包 (<a href="https://rollupjs.org/">Rollup</a>, <a href="https://cli.vuejs.org/">Vue CLI</a>) 和配置工具，请参考 <a href="https://github.com/antfu/unplugin-vue-components#installation">unplugin-vue-components</a> 和 <a href="https://github.com/antfu/unplugin-auto-import#install">unplugin-auto-import</a>。</p><h4 id="Nuxt"><a href="https://mxts.jiujiuer.xyz/2023/07/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/Web%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/#Nuxt" class="headerlink" title="Nuxt"></a>Nuxt</h4><p>关于 Nuxt 用户, 你只需要安装 <code>@element-plus/nuxt</code> 即可.</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/></pre></td><td class="code"><pre><span class="line">npm install -D @element-plus/nuxt</span><br/></pre></td></tr></tbody></table></figure><p>然后将下面的代码写入你的配置文件.</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/></pre></td><td class="code"><pre><span class="line">// nuxt.config.ts</span><br/><span class="line">export default defineNuxtConfig({</span><br/><span class="line">  modules: [&#39;@element-plus/nuxt&#39;],</span><br/><span class="line">})</span><br/></pre></td></tr></tbody></table></figure><p>配置文档参考 <a href="https://github.com/element-plus/element-plus-nuxt#readme">docs</a>.</p><h3 id="手动导入"><a href="https://mxts.jiujiuer.xyz/2023/07/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/Web%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/#%E6%89%8B%E5%8A%A8%E5%AF%BC%E5%85%A5" class="headerlink" title="手动导入"></a>手动导入</h3><p>Element Plus 提供了基于 ES Module 的开箱即用的 <a href="https://webpack.js.org/guides/tree-shaking/">Tree Shaking</a> 功能。</p><p>但你需要安装 <a href="https://github.com/element-plus/unplugin-element-plus">unplugin-element-plus</a> 来导入样式。 配置文档参考 <a href="https://github.com/element-plus/unplugin-element-plus#readme">docs</a>.</p><blockquote><p>App.vue</p></blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/><span class="line">9</span><br/></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br/><span class="line">  &lt;el-button&gt;我是 ElButton&lt;/el-button&gt;</span><br/><span class="line">&lt;/template&gt;</span><br/><span class="line">&lt;script&gt;</span><br/><span class="line">  import { ElButton } from &#39;element-plus&#39;</span><br/><span class="line">  export default {</span><br/><span class="line">    components: { ElButton },</span><br/><span class="line">  }</span><br/><span class="line">&lt;/script&gt;</span><br/></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/></pre></td><td class="code"><pre><span class="line">// vite.config.ts</span><br/><span class="line">import { defineConfig } from &#39;vite&#39;</span><br/><span class="line">import ElementPlus from &#39;unplugin-element-plus/vite&#39;</span><br/><span class="line"></span><br/><span class="line">export default defineConfig({</span><br/><span class="line">  // ...</span><br/><span class="line">  plugins: [ElementPlus()],</span><br/><span class="line">})</span><br/></pre></td></tr></tbody></table></figure><p>WARNING</p><p>如果使用 <code>unplugin-element-plus</code> 并且只使用组件 API，你需要手动导入样式。</p><p>Example:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/></pre></td><td class="code"><pre><span class="line">import &#39;element-plus/es/components/message/style/css&#39;</span><br/><span class="line">import { ElMessage } from &#39;element-plus&#39;</span><br/></pre></td></tr></tbody></table></figure><h3 id="全局配置"><a href="https://mxts.jiujiuer.xyz/2023/07/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/Web%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/#%E5%85%A8%E5%B1%80%E9%85%8D%E7%BD%AE" class="headerlink" title="全局配置"></a>全局配置</h3><p>在引入 ElementPlus 时，可以传入一个包含 <code>size</code> 和 <code>zIndex</code> 属性的全局配置对象。 <code>size</code> 用于设置表单组件的默认尺寸，<code>zIndex</code> 用于设置弹出组件的层级，<code>zIndex</code> 的默认值为 <code>2000</code>。</p><p>完整引入：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/></pre></td><td class="code"><pre><span class="line">import { createApp } from &#39;vue&#39;</span><br/><span class="line">import ElementPlus from &#39;element-plus&#39;</span><br/><span class="line">import App from &#39;./App.vue&#39;</span><br/><span class="line"></span><br/><span class="line">const app = createApp(App)</span><br/><span class="line">app.use(ElementPlus, { size: &#39;small&#39;, zIndex: 3000 })</span><br/></pre></td></tr></tbody></table></figure><p>按需引入:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/><span class="line">9</span><br/><span class="line">10</span><br/><span class="line">11</span><br/><span class="line">12</span><br/><span class="line">13</span><br/><span class="line">14</span><br/><span class="line">15</span><br/><span class="line">16</span><br/><span class="line">17</span><br/><span class="line">18</span><br/><span class="line">19</span><br/><span class="line">20</span><br/><span class="line">21</span><br/><span class="line">22</span><br/></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br/><span class="line">  &lt;el-config-provider :size=&#34;size&#34; :z-index=&#34;zIndex&#34;&gt;</span><br/><span class="line">    &lt;app /&gt;</span><br/><span class="line">  &lt;/el-config-provider&gt;</span><br/><span class="line">&lt;/template&gt;</span><br/><span class="line"></span><br/><span class="line">&lt;script&gt;</span><br/><span class="line">import { defineComponent } from &#39;vue&#39;</span><br/><span class="line">import { ElConfigProvider } from &#39;element-plus&#39;</span><br/><span class="line"></span><br/><span class="line">export default defineComponent({</span><br/><span class="line">  components: {</span><br/><span class="line">    ElConfigProvider,</span><br/><span class="line">  },</span><br/><span class="line">  setup() {</span><br/><span class="line">    return {</span><br/><span class="line">      zIndex: 3000,</span><br/><span class="line">      size: &#39;small&#39;,</span><br/><span class="line">    }</span><br/><span class="line">  },</span><br/><span class="line">})</span><br/><span class="line">&lt;/script&gt;</span><br/></pre></td></tr></tbody></table></figure><h3 id="el-input的输入问题"><a href="https://mxts.jiujiuer.xyz/2023/07/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/Web%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/#el-input%E7%9A%84%E8%BE%93%E5%85%A5%E9%97%AE%E9%A2%98" class="headerlink" title="el-input的输入问题"></a><code>el-input</code>的输入问题</h3><p>遇到过一次输入框无法输入的问题。查看了下<a href="https://element-plus.gitee.io/zh-CN/component/input.html#input-%E8%BE%93%E5%85%A5%E6%A1%86">官方文档</a>发现是设计特性。正常来说，Input总是会响应输入事件，但是<strong>el-input是受控组件，所以它总是会更优先保证显示v-model绑定的数据值</strong>。这也就是为什么输入不会被正常响应的原因：没有给它加<code>v-model</code>，或者绑定了不存在/错误的对象。</p><blockquote><p>不过我绑定不存在元素的时候居然没有报错，神奇……</p></blockquote><h2 id="vue3-vite相对路径打包"><a href="https://mxts.jiujiuer.xyz/2023/07/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/JavaScript/Web%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/#vue3-vite%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84%E6%89%93%E5%8C%85" class="headerlink" title="vue3+vite相对路径打包"></a>vue3+vite相对路径打包</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/></pre></td><td class="code"><pre><span class="line">import { defineConfig } from &#39;vite&#39;</span><br/><span class="line">import vue from &#39;@vitejs/plugin-vue&#39;</span><br/><span class="line"></span><br/><span class="line">// https://vitejs.dev/config/</span><br/><span class="line">export default defineConfig({</span><br/><span class="line">  plugins: [vue()],</span><br/><span class="line">  base: &#39;./&#39;</span><br/><span class="line">})</span><br/></pre></td></tr></tbody></table></figure></body></html>