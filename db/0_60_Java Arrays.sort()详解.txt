<html><head></head><body><h2 id="一、介绍"><a href="https://xeonds.github.io/2022/11/22/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/Java%20Arrays.sort()%E8%AF%A6%E8%A7%A3/#%E4%B8%80%E3%80%81%E4%BB%8B%E7%BB%8D" class="headerlink" title="一、介绍"></a>一、介绍</h2><p>Arrays.sort()是经过调优排序算法，性能能达到n*log(n)。Arrays.sort()重载了四类方法</p><ul><li>sort(T[] a)：对指定T型数组按数字升序排序。</li><li>sort(T[] a,int formIndex, int toIndex)：对指定T型数组的指定范围按数字升序排序。</li><li>sort(T[] a, Comparator&lt;? supre T&gt; c): 根据指定比较器产生的顺序对指定对象数组进行排序。</li><li>sort(T[] a, int formIndex, int toIndex, Comparator&lt;? supre T&gt; c): 根据指定比较器产生的顺序对指定对象数组的指定对象数组进行排序。</li></ul><h3 id="1、sort-T-a"><a href="https://xeonds.github.io/2022/11/22/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/Java%20Arrays.sort()%E8%AF%A6%E8%A7%A3/#1%E3%80%81sort-T-a" class="headerlink" title="1、sort(T[] a)"></a>1、sort(T[] a)</h3><p>对指定T型数组按数字升序排序。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/><span class="line">9</span><br/><span class="line">10</span><br/><span class="line">11</span><br/><span class="line">12</span><br/><span class="line">13</span><br/></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br/><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br/><span class="line"></span><br/><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArraysSort</span> {</span><br/><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br/><span class="line">        <span class="type">int</span>[] a={<span class="number">2</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">8</span>};</span><br/><span class="line">        Arrays.sort(a);</span><br/><span class="line">        System.out.println(Arrays.toString(a));</span><br/><span class="line">    }</span><br/><span class="line">}  </span><br/><span class="line">  </span><br/><span class="line"><span class="comment">// 结果  </span></span><br/><span class="line"><span class="comment">// [1, 2, 3, 4, 5, 8]  </span></span><br/></pre></td></tr></tbody></table></figure><h3 id="2、sort-T-a-int-formIndex-int-toIndex"><a href="https://xeonds.github.io/2022/11/22/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/Java%20Arrays.sort()%E8%AF%A6%E8%A7%A3/#2%E3%80%81sort-T-a-int-formIndex-int-toIndex" class="headerlink" title="2、sort(T[] a,int formIndex, int toIndex)"></a>2、sort(T[] a,int formIndex, int toIndex)</h3><p>对指定T型数组的指定范围按数字升序排序。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/><span class="line">9</span><br/><span class="line">10</span><br/><span class="line">11</span><br/><span class="line">12</span><br/><span class="line">13</span><br/></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br/><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br/><span class="line"></span><br/><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArraysSort</span> {</span><br/><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br/><span class="line">        <span class="type">int</span>[] a={<span class="number">2</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">8</span>};</span><br/><span class="line">        Arrays.sort(a,<span class="number">2</span>,<span class="number">5</span>);</span><br/><span class="line">        System.out.println(Arrays.toString(a));</span><br/><span class="line">    }</span><br/><span class="line">}</span><br/><span class="line"></span><br/><span class="line"><span class="comment">// 结果</span></span><br/><span class="line"><span class="comment">// [2, 5, 1, 3, 4, 8]</span></span><br/></pre></td></tr></tbody></table></figure><h3 id="3、sort-T-a-Comparator-lt-supre-T-gt-c"><a href="https://xeonds.github.io/2022/11/22/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/Java%20Arrays.sort()%E8%AF%A6%E8%A7%A3/#3%E3%80%81sort-T-a-Comparator-lt-supre-T-gt-c" class="headerlink" title="3、sort(T[] a, Comparator&lt;? supre T&gt; c)"></a>3、sort(T[] a, Comparator&lt;? supre T&gt; c)</h3><p>根据指定比较器产生的顺序对指定对象数组进行排序。</p><h4 id="（1）按第一维元素比较二维数组"><a href="https://xeonds.github.io/2022/11/22/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/Java%20Arrays.sort()%E8%AF%A6%E8%A7%A3/#%EF%BC%881%EF%BC%89%E6%8C%89%E7%AC%AC%E4%B8%80%E7%BB%B4%E5%85%83%E7%B4%A0%E6%AF%94%E8%BE%83%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84" class="headerlink" title="（1）按第一维元素比较二维数组"></a>（1）按第一维元素比较二维数组</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/><span class="line">9</span><br/><span class="line">10</span><br/><span class="line">11</span><br/><span class="line">12</span><br/><span class="line">13</span><br/><span class="line">14</span><br/><span class="line">15</span><br/><span class="line">16</span><br/><span class="line">17</span><br/><span class="line">18</span><br/><span class="line">19</span><br/><span class="line">20</span><br/><span class="line">21</span><br/><span class="line">22</span><br/><span class="line">23</span><br/><span class="line">24</span><br/><span class="line">25</span><br/><span class="line">26</span><br/><span class="line">27</span><br/><span class="line">28</span><br/><span class="line">29</span><br/><span class="line">30</span><br/><span class="line">31</span><br/><span class="line">32</span><br/><span class="line">33</span><br/><span class="line">34</span><br/><span class="line">35</span><br/><span class="line">36</span><br/><span class="line">37</span><br/><span class="line">38</span><br/><span class="line">39</span><br/></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br/><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br/><span class="line"></span><br/><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArraysSort</span> {</span><br/><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br/><span class="line">        <span class="type">int</span>[][] nums=<span class="keyword">new</span> <span class="title class_">int</span>[][]{{<span class="number">1</span>,<span class="number">3</span>},{<span class="number">1</span>,<span class="number">2</span>},{<span class="number">4</span>,<span class="number">5</span>},{<span class="number">3</span>,<span class="number">7</span>}};</span><br/><span class="line">        <span class="comment">//方法一</span></span><br/><span class="line">        Arrays.sort(nums,<span class="keyword">new</span> <span class="title class_">Comparator</span>&lt;<span class="type">int</span>[]&gt;(){</span><br/><span class="line">            <span class="meta">@Override</span></span><br/><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(<span class="type">int</span>[] a,<span class="type">int</span>[] b)</span>{</span><br/><span class="line">                <span class="keyword">if</span>(a[<span class="number">0</span>]==b[<span class="number">0</span>]){</span><br/><span class="line">                    <span class="keyword">return</span> a[<span class="number">1</span>]-b[<span class="number">1</span>];</span><br/><span class="line">                }<span class="keyword">else</span>{</span><br/><span class="line">                    <span class="keyword">return</span> a[<span class="number">0</span>]-b[<span class="number">0</span>];</span><br/><span class="line">                }</span><br/><span class="line">            }</span><br/><span class="line">        });</span><br/><span class="line"></span><br/><span class="line"></span><br/><span class="line">        <span class="comment">// 方法二，使用匿名表达式</span></span><br/><span class="line">        <span class="comment">// (a,b)-&gt;a[1]-b[1]会自动转变成上面的形式</span></span><br/><span class="line">        <span class="comment">/*Arrays.sort(nums,(a,b)-&gt;a[1]-b[1]);*/</span></span><br/><span class="line">        <span class="keyword">for</span> (<span class="type">int</span>[] num : nums) {</span><br/><span class="line">            System.out.println(Arrays.toString(num));</span><br/><span class="line">        }</span><br/><span class="line"></span><br/><span class="line">        <span class="type">int</span>[] a={<span class="number">2</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">8</span>};</span><br/><span class="line">        Arrays.sort(a,<span class="number">2</span>,<span class="number">5</span>);</span><br/><span class="line">        System.out.println(Arrays.toString(a));</span><br/><span class="line">    }</span><br/><span class="line">}</span><br/><span class="line"></span><br/><span class="line"><span class="comment">// 结果</span></span><br/><span class="line"><span class="comment">/*</span></span><br/><span class="line"><span class="comment">[1, 2]</span></span><br/><span class="line"><span class="comment">[1, 3]</span></span><br/><span class="line"><span class="comment">[3, 7]</span></span><br/><span class="line"><span class="comment">[4, 5]</span></span><br/><span class="line"><span class="comment">*/</span></span><br/></pre></td></tr></tbody></table></figure><h4 id="（2）按第二维元素比较二维数组"><a href="https://xeonds.github.io/2022/11/22/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/Java%20Arrays.sort()%E8%AF%A6%E8%A7%A3/#%EF%BC%882%EF%BC%89%E6%8C%89%E7%AC%AC%E4%BA%8C%E7%BB%B4%E5%85%83%E7%B4%A0%E6%AF%94%E8%BE%83%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84" class="headerlink" title="（2）按第二维元素比较二维数组"></a>（2）按第二维元素比较二维数组</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/><span class="line">9</span><br/><span class="line">10</span><br/><span class="line">11</span><br/><span class="line">12</span><br/><span class="line">13</span><br/><span class="line">14</span><br/><span class="line">15</span><br/><span class="line">16</span><br/><span class="line">17</span><br/><span class="line">18</span><br/><span class="line">19</span><br/><span class="line">20</span><br/><span class="line">21</span><br/><span class="line">22</span><br/><span class="line">23</span><br/><span class="line">24</span><br/><span class="line">25</span><br/><span class="line">26</span><br/><span class="line">27</span><br/><span class="line">28</span><br/><span class="line">29</span><br/><span class="line">30</span><br/><span class="line">31</span><br/><span class="line">32</span><br/><span class="line">33</span><br/></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br/><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br/><span class="line"></span><br/><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArraysSort</span> {</span><br/><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br/><span class="line">        <span class="type">int</span>[][] nums=<span class="keyword">new</span> <span class="title class_">int</span>[][]{{<span class="number">1</span>,<span class="number">3</span>},{<span class="number">1</span>,<span class="number">2</span>},{<span class="number">4</span>,<span class="number">5</span>},{<span class="number">3</span>,<span class="number">7</span>}};</span><br/><span class="line">        <span class="comment">//方法一</span></span><br/><span class="line">        Arrays.sort(nums,<span class="keyword">new</span> <span class="title class_">Comparator</span>&lt;<span class="type">int</span>[]&gt;(){</span><br/><span class="line">            <span class="meta">@Override</span></span><br/><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(<span class="type">int</span>[] a,<span class="type">int</span>[] b)</span>{</span><br/><span class="line">                <span class="keyword">if</span>(a[<span class="number">1</span>]==b[<span class="number">1</span>]){</span><br/><span class="line">                    <span class="keyword">return</span> a[<span class="number">0</span>]-b[<span class="number">0</span>];</span><br/><span class="line">                }<span class="keyword">else</span>{</span><br/><span class="line">                    <span class="keyword">return</span> a[<span class="number">1</span>]-b[<span class="number">1</span>];</span><br/><span class="line">                }</span><br/><span class="line">            }</span><br/><span class="line">        });</span><br/><span class="line"></span><br/><span class="line">        <span class="comment">//方法二</span></span><br/><span class="line">        <span class="comment">/*Arrays.sort(nums,(a,b)-&gt;a[1]-b[1]);*/</span></span><br/><span class="line">        <span class="keyword">for</span> (<span class="type">int</span>[] num : nums) {</span><br/><span class="line">            System.out.println(Arrays.toString(num));</span><br/><span class="line">        }</span><br/><span class="line"></span><br/><span class="line">    }</span><br/><span class="line">}</span><br/><span class="line"><span class="comment">// 结果</span></span><br/><span class="line"><span class="comment">/*</span></span><br/><span class="line"><span class="comment">[1, 2]</span></span><br/><span class="line"><span class="comment">[1, 3]</span></span><br/><span class="line"><span class="comment">[4, 5]</span></span><br/><span class="line"><span class="comment">[3, 7]</span></span><br/><span class="line"><span class="comment">*/</span></span><br/></pre></td></tr></tbody></table></figure><p>其实这个方法最重要的还是<strong>类对象的比较</strong>。由于我们可以自定义比较器，所以我们可以使用策略模式，使得在运行时选择不同的算法。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/><span class="line">9</span><br/><span class="line">10</span><br/><span class="line">11</span><br/><span class="line">12</span><br/><span class="line">13</span><br/><span class="line">14</span><br/><span class="line">15</span><br/><span class="line">16</span><br/><span class="line">17</span><br/><span class="line">18</span><br/><span class="line">19</span><br/><span class="line">20</span><br/><span class="line">21</span><br/><span class="line">22</span><br/><span class="line">23</span><br/><span class="line">24</span><br/><span class="line">25</span><br/><span class="line">26</span><br/><span class="line">27</span><br/><span class="line">28</span><br/><span class="line">29</span><br/><span class="line">30</span><br/><span class="line">31</span><br/><span class="line">32</span><br/><span class="line">33</span><br/><span class="line">34</span><br/><span class="line">35</span><br/><span class="line">36</span><br/><span class="line">37</span><br/><span class="line">38</span><br/><span class="line">39</span><br/><span class="line">40</span><br/><span class="line">41</span><br/><span class="line">42</span><br/><span class="line">43</span><br/><span class="line">44</span><br/><span class="line">45</span><br/><span class="line">46</span><br/><span class="line">47</span><br/><span class="line">48</span><br/><span class="line">49</span><br/><span class="line">50</span><br/><span class="line">51</span><br/><span class="line">52</span><br/><span class="line">53</span><br/><span class="line">54</span><br/><span class="line">55</span><br/><span class="line">56</span><br/><span class="line">57</span><br/><span class="line">58</span><br/><span class="line">59</span><br/></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br/><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br/><span class="line"></span><br/><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>{</span><br/><span class="line">    <span class="type">int</span> size;</span><br/><span class="line">    <span class="type">int</span> weight;</span><br/><span class="line"></span><br/><span class="line">    <span class="keyword">public</span> <span class="title function_">Dog</span><span class="params">(<span class="type">int</span> s, <span class="type">int</span> w)</span>{</span><br/><span class="line">        size = s;</span><br/><span class="line">        weight = w;</span><br/><span class="line">    }</span><br/><span class="line">}</span><br/><span class="line"></span><br/><span class="line"><span class="keyword">class</span> <span class="title class_">DogSizeComparator</span> <span class="keyword">implements</span> <span class="title class_">Comparator</span>&lt;Dog&gt;{</span><br/><span class="line"></span><br/><span class="line">    <span class="meta">@Override</span></span><br/><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(Dog o1, Dog o2)</span> {</span><br/><span class="line">        <span class="keyword">return</span> o1.size - o2.size;</span><br/><span class="line">    }</span><br/><span class="line">}</span><br/><span class="line"></span><br/><span class="line"><span class="keyword">class</span> <span class="title class_">DogWeightComparator</span> <span class="keyword">implements</span> <span class="title class_">Comparator</span>&lt;Dog&gt;{</span><br/><span class="line"></span><br/><span class="line">    <span class="meta">@Override</span></span><br/><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(Dog o1, Dog o2)</span> {</span><br/><span class="line">        <span class="keyword">return</span> o1.weight - o2.weight;</span><br/><span class="line">    }</span><br/><span class="line">}</span><br/><span class="line"></span><br/><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArraysSort</span> {</span><br/><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br/><span class="line">        <span class="type">Dog</span> <span class="variable">d1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>(<span class="number">2</span>, <span class="number">50</span>);</span><br/><span class="line">        <span class="type">Dog</span> <span class="variable">d2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>(<span class="number">1</span>, <span class="number">30</span>);</span><br/><span class="line">        <span class="type">Dog</span> <span class="variable">d3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>(<span class="number">3</span>, <span class="number">40</span>);</span><br/><span class="line"></span><br/><span class="line">        Dog[] dogArray = {d1, d2, d3};</span><br/><span class="line">        printDogs(dogArray);</span><br/><span class="line"></span><br/><span class="line">        Arrays.sort(dogArray, <span class="keyword">new</span> <span class="title class_">DogSizeComparator</span>());</span><br/><span class="line">        printDogs(dogArray);</span><br/><span class="line"></span><br/><span class="line">        Arrays.sort(dogArray, <span class="keyword">new</span> <span class="title class_">DogWeightComparator</span>());</span><br/><span class="line">        printDogs(dogArray);</span><br/><span class="line">    }</span><br/><span class="line"></span><br/><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printDogs</span><span class="params">(Dog[] dogs)</span>{</span><br/><span class="line">        <span class="keyword">for</span>(Dog d: dogs)</span><br/><span class="line">            System.out.print(<span class="string">&#34;size=&#34;</span>+d.size + <span class="string">&#34; weight=&#34;</span> + d.weight + <span class="string">&#34; &#34;</span>);</span><br/><span class="line"></span><br/><span class="line">        System.out.println();</span><br/><span class="line">    }</span><br/><span class="line">}</span><br/><span class="line"></span><br/><span class="line"><span class="comment">// 结果</span></span><br/><span class="line"><span class="comment">/*</span></span><br/><span class="line"><span class="comment">size=2 weight=50 size=1 weight=30 size=3 weight=40 </span></span><br/><span class="line"><span class="comment">size=1 weight=30 size=2 weight=50 size=3 weight=40 </span></span><br/><span class="line"><span class="comment">size=1 weight=30 size=3 weight=40 size=2 weight=50 </span></span><br/><span class="line"><span class="comment">*/</span></span><br/></pre></td></tr></tbody></table></figure><p>那么在参数中会出现super呢？这意味着这类型<strong>可以是T或者它的父类型</strong>。这就使得该方法可以允许所有子类使用相同的比较器。详细见代码：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/><span class="line">9</span><br/><span class="line">10</span><br/><span class="line">11</span><br/><span class="line">12</span><br/><span class="line">13</span><br/><span class="line">14</span><br/><span class="line">15</span><br/><span class="line">16</span><br/><span class="line">17</span><br/><span class="line">18</span><br/><span class="line">19</span><br/><span class="line">20</span><br/><span class="line">21</span><br/><span class="line">22</span><br/><span class="line">23</span><br/><span class="line">24</span><br/><span class="line">25</span><br/><span class="line">26</span><br/><span class="line">27</span><br/><span class="line">28</span><br/><span class="line">29</span><br/><span class="line">30</span><br/><span class="line">31</span><br/><span class="line">32</span><br/><span class="line">33</span><br/><span class="line">34</span><br/><span class="line">35</span><br/><span class="line">36</span><br/><span class="line">37</span><br/><span class="line">38</span><br/><span class="line">39</span><br/><span class="line">40</span><br/><span class="line">41</span><br/><span class="line">42</span><br/><span class="line">43</span><br/><span class="line">44</span><br/><span class="line">45</span><br/><span class="line">46</span><br/><span class="line">47</span><br/><span class="line">48</span><br/><span class="line">49</span><br/><span class="line">50</span><br/><span class="line">51</span><br/><span class="line">52</span><br/><span class="line">53</span><br/><span class="line">54</span><br/><span class="line">55</span><br/><span class="line">56</span><br/><span class="line">57</span><br/><span class="line">58</span><br/><span class="line">59</span><br/><span class="line">60</span><br/><span class="line">61</span><br/><span class="line">62</span><br/><span class="line">63</span><br/><span class="line">64</span><br/><span class="line">65</span><br/><span class="line">66</span><br/></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br/><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br/><span class="line"></span><br/><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span>{</span><br/><span class="line">    <span class="type">int</span> size;</span><br/><span class="line">}</span><br/><span class="line"></span><br/><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_">Animal</span>{</span><br/><span class="line">    <span class="keyword">public</span> <span class="title function_">Dog</span><span class="params">(<span class="type">int</span> s)</span>{</span><br/><span class="line">        size = s;</span><br/><span class="line">    }</span><br/><span class="line">}</span><br/><span class="line"></span><br/><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> <span class="keyword">extends</span> <span class="title class_">Animal</span>{</span><br/><span class="line">    <span class="keyword">public</span> <span class="title function_">Cat</span><span class="params">(<span class="type">int</span> s)</span>{</span><br/><span class="line">        size  = s;</span><br/><span class="line">    }</span><br/><span class="line">}</span><br/><span class="line"></span><br/><span class="line"><span class="keyword">class</span> <span class="title class_">AnimalSizeComparator</span> <span class="keyword">implements</span> <span class="title class_">Comparator</span>&lt;Animal&gt;{</span><br/><span class="line">    <span class="meta">@Override</span></span><br/><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(Animal o1, Animal o2)</span> {</span><br/><span class="line">        <span class="keyword">return</span> o1.size - o2.size;</span><br/><span class="line">    }</span><br/><span class="line">}</span><br/><span class="line"></span><br/><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArraysSort</span> {</span><br/><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br/><span class="line">        <span class="type">Dog</span> <span class="variable">d1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>(<span class="number">2</span>);</span><br/><span class="line">        <span class="type">Dog</span> <span class="variable">d2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>(<span class="number">1</span>);</span><br/><span class="line">        <span class="type">Dog</span> <span class="variable">d3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>(<span class="number">3</span>);</span><br/><span class="line"></span><br/><span class="line">        Dog[] dogArray = {d1, d2, d3};</span><br/><span class="line">        printDogs(dogArray);</span><br/><span class="line"></span><br/><span class="line">        Arrays.sort(dogArray, <span class="keyword">new</span> <span class="title class_">AnimalSizeComparator</span>());</span><br/><span class="line">        printDogs(dogArray);</span><br/><span class="line"></span><br/><span class="line">        System.out.println();</span><br/><span class="line">        </span><br/><span class="line">        <span class="type">Cat</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cat</span>(<span class="number">2</span>);</span><br/><span class="line">        <span class="type">Cat</span> <span class="variable">c2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cat</span>(<span class="number">1</span>);</span><br/><span class="line">        <span class="type">Cat</span> <span class="variable">c3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cat</span>(<span class="number">3</span>);</span><br/><span class="line"></span><br/><span class="line">        Cat[] catArray = {c1, c2, c3};</span><br/><span class="line">        printDogs(catArray);</span><br/><span class="line"></span><br/><span class="line">        Arrays.sort(catArray, <span class="keyword">new</span> <span class="title class_">AnimalSizeComparator</span>());</span><br/><span class="line">        printDogs(catArray);</span><br/><span class="line">    }</span><br/><span class="line"></span><br/><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printDogs</span><span class="params">(Animal[] animals)</span>{</span><br/><span class="line">        <span class="keyword">for</span>(Animal a: animals)</span><br/><span class="line">            System.out.print(<span class="string">&#34;size=&#34;</span>+a.size + <span class="string">&#34; &#34;</span>);</span><br/><span class="line">        System.out.println();</span><br/><span class="line">    }</span><br/><span class="line">}</span><br/><span class="line"></span><br/><span class="line"><span class="comment">// 结果</span></span><br/><span class="line"><span class="comment">/*</span></span><br/><span class="line"><span class="comment">size=2 size=1 size=3 </span></span><br/><span class="line"><span class="comment">size=1 size=2 size=3 </span></span><br/><span class="line"><span class="comment"></span></span><br/><span class="line"><span class="comment">size=2 size=1 size=3 </span></span><br/><span class="line"><span class="comment">size=1 size=2 size=3 </span></span><br/><span class="line"><span class="comment">*/</span></span><br/></pre></td></tr></tbody></table></figure><h3 id="4、sort-T-a-int-formIndex-int-toIndex-Comparator-lt-supre-T-gt-c"><a href="https://xeonds.github.io/2022/11/22/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/Java%20Arrays.sort()%E8%AF%A6%E8%A7%A3/#4%E3%80%81sort-T-a-int-formIndex-int-toIndex-Comparator-lt-supre-T-gt-c" class="headerlink" title="4、sort(T[] a, int formIndex, int toIndex, Comparator&lt;? supre T&gt; c)"></a>4、sort(T[] a, int formIndex, int toIndex, Comparator&lt;? supre T&gt; c)</h3><p>根据指定比较器产生的顺序对指定对象数组的指定对象数组进行排序。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/><span class="line">9</span><br/><span class="line">10</span><br/><span class="line">11</span><br/><span class="line">12</span><br/><span class="line">13</span><br/><span class="line">14</span><br/><span class="line">15</span><br/><span class="line">16</span><br/><span class="line">17</span><br/><span class="line">18</span><br/><span class="line">19</span><br/><span class="line">20</span><br/><span class="line">21</span><br/><span class="line">22</span><br/><span class="line">23</span><br/><span class="line">24</span><br/><span class="line">25</span><br/><span class="line">26</span><br/><span class="line">27</span><br/><span class="line">28</span><br/></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br/><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br/><span class="line"></span><br/><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArraysSort</span> {</span><br/><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br/><span class="line">        <span class="type">int</span>[][] nums=<span class="keyword">new</span> <span class="title class_">int</span>[][]{{<span class="number">1</span>,<span class="number">3</span>},{<span class="number">1</span>,<span class="number">2</span>},{<span class="number">4</span>,<span class="number">5</span>},{<span class="number">3</span>,<span class="number">7</span>}};</span><br/><span class="line">        </span><br/><span class="line">        Arrays.sort(nums,<span class="number">2</span>,<span class="number">4</span>,<span class="keyword">new</span> <span class="title class_">Comparator</span>&lt;<span class="type">int</span>[]&gt;(){</span><br/><span class="line">            <span class="meta">@Override</span></span><br/><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(<span class="type">int</span>[] a,<span class="type">int</span>[] b)</span>{</span><br/><span class="line">                <span class="keyword">if</span>(a[<span class="number">0</span>]==b[<span class="number">0</span>]){</span><br/><span class="line">                    <span class="keyword">return</span> a[<span class="number">1</span>]-b[<span class="number">1</span>];</span><br/><span class="line">                }<span class="keyword">else</span>{</span><br/><span class="line">                    <span class="keyword">return</span> a[<span class="number">0</span>]-b[<span class="number">0</span>];</span><br/><span class="line">                }</span><br/><span class="line">            }</span><br/><span class="line">        });</span><br/><span class="line">    }</span><br/><span class="line">}</span><br/><span class="line"></span><br/><span class="line"><span class="comment">// 结果</span></span><br/><span class="line"><span class="comment">/*</span></span><br/><span class="line"><span class="comment">[1, 3]</span></span><br/><span class="line"><span class="comment">[1, 2]</span></span><br/><span class="line"><span class="comment">[3, 7]</span></span><br/><span class="line"><span class="comment">[4, 5]</span></span><br/><span class="line"><span class="comment">可以看到只对第三行和第四行排序了</span></span><br/><span class="line"><span class="comment">*/</span></span><br/></pre></td></tr></tbody></table></figure></body></html>