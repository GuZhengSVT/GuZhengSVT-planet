<html><head></head><body><p>在编写需要命令行参数的C程序的时候，往往我们需要先解析命令行参数，然后根据这些参数来启动我们的程序。</p><p>C的库函数中提供了两个函数可以用来帮助我们解析命令行参数:getopt、getopt_long。</p><p>getopt可以解析短参数，所谓短参数就是指选项前只有一个“-”(如-t)，而getopt_long则支持短参数跟长参数(如”–prefix”)。</p><h2 id="getopt函数"><a href="https://xeonds.github.io/2022/11/22/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/C%C2%B7C++/C%E8%AF%AD%E8%A8%80%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0%E8%A7%A3%E6%9E%90/#getopt%E5%87%BD%E6%95%B0" class="headerlink" title="getopt函数"></a>getopt函数</h2><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;unistd.h&gt;</span></span></span><br/><span class="line"><span class="type">int</span> <span class="title function_">getopt</span><span class="params">(<span class="type">int</span> argc,<span class="type">char</span> * <span class="type">const</span> argv[],<span class="type">const</span> <span class="type">char</span> *optstring)</span>;</span><br/><span class="line"><span class="keyword">extern</span> <span class="type">char</span> *optarg;   <span class="comment">//当前选项参数字串（如果有）</span></span><br/><span class="line"><span class="keyword">extern</span> <span class="type">int</span> optind;     <span class="comment">//argv的当前索引值</span></span><br/></pre></td></tr></tbody></table></figure><p>各参数的意义:</p><ul><li>argc:通常为main函数中的argc</li><li>argv:通常为main函数中的argv</li><li>optstring:用来指定选项的内容(如:”ab:c”)，它由多个部分组成，表示的意义分别为：</li></ul><ol><li><p>单个字符，表示选项。</p></li><li><p>单个字符后接一个冒号：表示该选项后必须跟一个参数。参数紧跟在选项后或者以空格隔开。该参数的指针赋给optarg。</p></li><li><p>单个字符后跟两个冒号，表示该选项后可以跟一个参数，也可以不跟。如果跟一个参数，参数必须紧跟在选项后不能以空格隔开。该参数的指针赋给optarg。</p></li></ol><p>调用该函数将返回解析到的当前选项，该选项的参数将赋给optarg，如果该选项没有参数，则optarg为NULL。下面将演示该函数的用法</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/><span class="line">9</span><br/><span class="line">10</span><br/><span class="line">11</span><br/><span class="line">12</span><br/><span class="line">13</span><br/><span class="line">14</span><br/><span class="line">15</span><br/><span class="line">16</span><br/><span class="line">17</span><br/><span class="line">18</span><br/><span class="line">19</span><br/><span class="line">20</span><br/><span class="line">21</span><br/><span class="line">22</span><br/><span class="line">23</span><br/><span class="line">24</span><br/></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br/><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br/><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br/><span class="line"></span><br/><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc,<span class="type">char</span> *argv[])</span></span><br/><span class="line">{</span><br/><span class="line">    <span class="type">int</span> opt=<span class="number">0</span>;</span><br/><span class="line">    <span class="type">int</span> a=<span class="number">0</span>;</span><br/><span class="line">    <span class="type">int</span> b=<span class="number">0</span>;</span><br/><span class="line">    <span class="type">char</span> s[<span class="number">50</span>];</span><br/><span class="line">    <span class="keyword">while</span>((opt=getopt(argc,argv,<span class="string">&#34;ab:&#34;</span>))!=<span class="number">-1</span>)</span><br/><span class="line">    {</span><br/><span class="line">        <span class="keyword">switch</span>(opt)</span><br/><span class="line">        {</span><br/><span class="line">            <span class="keyword">case</span> <span class="string">&#39;a&#39;</span>:a=<span class="number">1</span>;<span class="keyword">break</span>;</span><br/><span class="line">            <span class="keyword">case</span> <span class="string">&#39;b&#39;</span>:b=<span class="number">1</span>;<span class="built_in">strcpy</span>(s,optarg);<span class="keyword">break</span>; </span><br/><span class="line">        }</span><br/><span class="line">    }</span><br/><span class="line">    <span class="keyword">if</span>(a)</span><br/><span class="line">        <span class="built_in">printf</span>(<span class="string">&#34;option a\n&#34;</span>);</span><br/><span class="line">    <span class="keyword">if</span>(b)</span><br/><span class="line">        <span class="built_in">printf</span>(<span class="string">&#34;option b:%s\n&#34;</span>,s);</span><br/><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br/><span class="line">}</span><br/></pre></td></tr></tbody></table></figure><p>编译之后可以如下调用该程序</p><p><img src="https://images2015.cnblogs.com/blog/779368/201511/779368-20151106222621946-984318181.png"/></p><h2 id="getopt-long函数"><a href="https://xeonds.github.io/2022/11/22/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/C%C2%B7C++/C%E8%AF%AD%E8%A8%80%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0%E8%A7%A3%E6%9E%90/#getopt-long%E5%87%BD%E6%95%B0" class="headerlink" title="getopt_long函数"></a>getopt_long函数</h2><p>与getopt不同的是，getopt_long还支持长参数。</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;getopt.h&gt;</span></span></span><br/><span class="line"><span class="type">int</span> <span class="title function_">getopt_long</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> * <span class="type">const</span> argv[],<span class="type">const</span> <span class="type">char</span> *optstring,<span class="type">const</span> <span class="keyword">struct</span> option *longopts, <span class="type">int</span> *longindex)</span>;</span><br/></pre></td></tr></tbody></table></figure><p>前面三个参数跟getopt函数一样(解析到短参数时返回值跟getopt一样)，而长参数的解析则与longopts参数相关，该参数使用如下的结构</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/><span class="line">9</span><br/><span class="line">10</span><br/><span class="line">11</span><br/><span class="line">12</span><br/><span class="line">13</span><br/><span class="line">14</span><br/><span class="line">15</span><br/></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">option</span> {</span></span><br/><span class="line">　　<span class="comment">//长参数名</span></span><br/><span class="line">　　<span class="type">const</span> <span class="type">char</span> *name;</span><br/><span class="line">　　<span class="comment">/*</span></span><br/><span class="line"><span class="comment">　　　　表示参数的个数</span></span><br/><span class="line"><span class="comment">　　　　no_argument(或者0)，表示该选项后面不跟参数值</span></span><br/><span class="line"><span class="comment">　　　　required_argument(或者1)，表示该选项后面一定跟一个参数</span></span><br/><span class="line"><span class="comment">　　　　optional_argument(或者2)，表示该选项后面的参数可选</span></span><br/><span class="line"><span class="comment">　　*/</span></span><br/><span class="line">　　<span class="type">int</span> has_arg;</span><br/><span class="line">　　<span class="comment">//如果flag为NULL，则函数会返回下面val参数的值，否则返回0，并将val值赋予赋予flag所指向的内存</span></span><br/><span class="line">　　<span class="type">int</span> *flag;</span><br/><span class="line">　　<span class="comment">//配合flag来决定返回值</span></span><br/><span class="line">　　<span class="type">int</span> val;</span><br/><span class="line">};</span><br/></pre></td></tr></tbody></table></figure><p>参数longindex，表示当前长参数在longopts中的索引值，如果不需要可以置为NULL。</p><p>下面是使用该函数的一个例子</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/><span class="line">9</span><br/><span class="line">10</span><br/><span class="line">11</span><br/><span class="line">12</span><br/><span class="line">13</span><br/><span class="line">14</span><br/><span class="line">15</span><br/><span class="line">16</span><br/><span class="line">17</span><br/><span class="line">18</span><br/><span class="line">19</span><br/><span class="line">20</span><br/><span class="line">21</span><br/><span class="line">22</span><br/><span class="line">23</span><br/><span class="line">24</span><br/><span class="line">25</span><br/></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br/><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br/><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;getopt.h&gt;</span></span></span><br/><span class="line"></span><br/><span class="line"><span class="type">int</span> learn=<span class="number">0</span>;</span><br/><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="class"><span class="keyword">struct</span> <span class="title">option</span> <span class="title">long_option</span>[]=</span>{</span><br/><span class="line">   {<span class="string">&#34;name&#34;</span>,required_argument,<span class="literal">NULL</span>,<span class="string">&#39;n&#39;</span>},</span><br/><span class="line">   {<span class="string">&#34;learn&#34;</span>,no_argument,&amp;learn,<span class="number">1</span>},</span><br/><span class="line">   {<span class="literal">NULL</span>,<span class="number">0</span>,<span class="literal">NULL</span>,<span class="number">0</span>}</span><br/><span class="line">};</span><br/><span class="line"></span><br/><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc,<span class="type">char</span> *argv[])</span></span><br/><span class="line">{</span><br/><span class="line">    <span class="type">int</span> opt=<span class="number">0</span>;</span><br/><span class="line">    <span class="keyword">while</span>((opt=getopt_long(argc,argv,<span class="string">&#34;n:l&#34;</span>,long_option,<span class="literal">NULL</span>))!=<span class="number">-1</span>)</span><br/><span class="line">    {</span><br/><span class="line">        <span class="keyword">switch</span>(opt)</span><br/><span class="line">        {</span><br/><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:<span class="keyword">break</span>;</span><br/><span class="line">            <span class="keyword">case</span> <span class="string">&#39;n&#39;</span>:<span class="built_in">printf</span>(<span class="string">&#34;name:%s &#34;</span>,optarg);                             </span><br/><span class="line">        }</span><br/><span class="line">    }</span><br/><span class="line">    <span class="keyword">if</span>(learn)</span><br/><span class="line">        <span class="built_in">printf</span>(<span class="string">&#34;learning\n&#34;</span>);</span><br/><span class="line">}</span><br/></pre></td></tr></tbody></table></figure><p>编译之后可以如下调用该程序</p><p><img src="https://images2015.cnblogs.com/blog/779368/201511/779368-20151106225136680-1898825378.png"/></p></body></html>