<html><head></head><body><h2 id="安装"><a href="https://xeonds.github.io/2023/09/05/arch-linux%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/#%E5%AE%89%E8%A3%85" class="headerlink" title="安装"></a>安装</h2><p>参考 Arch Wiki 或者参考这个简化版教程：<a href="https://arch.icekylin.online/">https://arch.icekylin.online/</a>。过程按照教程一步步折腾就ok，只要注意区分清楚各个分区，别不小心把数据分区给格式化了就行。联网是安装Arch的必须项，所以请保持网络畅通。另外，建议<strong>安装镜像最好在安装完成后继续保留着</strong>，应急情况下（比如滚挂了）可以用<code>arch-chroot</code>来应急重装内核之类的。</p><blockquote><p>至于Arch经常被吐槽滚挂了的原因，主要是源自Arch的更新策略比较激进，更新完成后，会直接删除老内核，比起一般的更新策略更容易出现依赖问题造成“滚挂了“。</p></blockquote><p>桌面环境、cn源、透明代理之类的配置，也可以参考上面的教程。关于透明代理，也可以参考<a href="https://blog.linioi.com/posts/clash-on-arch/">这篇文章</a>。</p><h2 id="美化"><a href="https://xeonds.github.io/2023/09/05/arch-linux%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/#%E7%BE%8E%E5%8C%96" class="headerlink" title="美化"></a>美化</h2><p>这点上因人而异。我装了layan主题之后，再换个壁纸，装个latte就差不多了。我的原则是，美化差不多就行，但是前提是别影响到系统性能。</p><h2 id="显示适配"><a href="https://xeonds.github.io/2023/09/05/arch-linux%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/#%E6%98%BE%E7%A4%BA%E9%80%82%E9%85%8D" class="headerlink" title="显示适配"></a>显示适配</h2><p>单显示器的配置很简单，改下dpi缩放就基本ok。如果是多显示器的话，就会复杂一些。参考下面的公式：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/></pre></td><td class="code"><pre><span class="line"><span class="comment"># 假设HiDPI显示器的分辨率是AxB，普通分辨率显示器的分辨率是CxD </span></span><br/><span class="line"><span class="comment"># 并且外置显示器的缩放比率是ExF</span></span><br/><span class="line">xrandr --output eDP-1 --auto --output HDMI-1 --auto --panning [C*E]x[D*F]+[A]+0 --scale [E]x[F] --right-of eDP-1</span><br/></pre></td></tr></tbody></table></figure><p>根据上面的公式来设置，基本上能搞定。当然，如果想调整的是内置HiDPI显示器分辨率，就得调整最后<code>panning</code>的A为Ax[A的缩放比率]。</p><h2 id="参考链接"><a href="https://xeonds.github.io/2023/09/05/arch-linux%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li>[1] <a href="https://nmgit.net/2020/139/">Barry的笔记</a></li><li>[2] <a href="https://harttle.land/2019/12/24/auto-xrandr.html">X11 多显示器配置：玩转 XRandR</a></li></ul><h2 id="启用外部ssh连接"><a href="https://xeonds.github.io/2023/09/05/arch-linux%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/#%E5%90%AF%E7%94%A8%E5%A4%96%E9%83%A8ssh%E8%BF%9E%E6%8E%A5" class="headerlink" title="启用外部ssh连接"></a>启用外部ssh连接</h2><p>如果想从外部连接到Arch的电脑上，只要安装了openssh就行。Arch默认不会启动<code>sshd</code>，所以我们得手动开启：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/></pre></td><td class="code"><pre><span class="line">systemctl start sshd</span><br/></pre></td></tr></tbody></table></figure><h2 id="在命令行连接Wi-Fi"><a href="https://xeonds.github.io/2023/09/05/arch-linux%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/#%E5%9C%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%BF%9E%E6%8E%A5Wi-Fi" class="headerlink" title="在命令行连接Wi-Fi"></a>在命令行连接Wi-Fi</h2><p>在完成安装后，启动NetworkManager：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> --now NetworkManager</span><br/></pre></td></tr></tbody></table></figure><p>然后使用<code>nmcli</code>来连接Wi-Fi：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/></pre></td><td class="code"><pre><span class="line">nmcli dev wifi list</span><br/><span class="line"><span class="comment"># 后面的password部分不指定的话，会自动要求输入</span></span><br/><span class="line">nmcli dev wifi connect <span class="string">&#34;SSID&#34;</span> password <span class="string">&#34;password&#34;</span></span><br/></pre></td></tr></tbody></table></figure><h2 id="使用TimeShift备份系统"><a href="https://xeonds.github.io/2023/09/05/arch-linux%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/#%E4%BD%BF%E7%94%A8TimeShift%E5%A4%87%E4%BB%BD%E7%B3%BB%E7%BB%9F" class="headerlink" title="使用TimeShift备份系统"></a>使用TimeShift备份系统</h2><p>TimeShift是一个很好用的系统备份软件，特别是结合了btrfs之后，备份的体积比借助<code>rsync</code>时更小。</p><p>折腾系统时不时可能滚挂，这种时候有个定期创建的映像就很有用了。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/></pre></td><td class="code"><pre><span class="line">sudo timeshift --list <span class="comment"># 获取快照列表</span></span><br/><span class="line">sudo timeshift --restore --snapshot <span class="string">&#39;20XX-XX-XX_XX-XX-XX&#39;</span> --skip-grub <span class="comment"># 选择一个快照进行还原，并跳过 GRUB 安装，一般来说 GRUB 不需要重新安装</span></span><br/></pre></td></tr></tbody></table></figure><p>如果恢复后无法使用，用安装盘通过<code>arch-chroot</code>进去系统，然后手动更改<code>subvolid</code>来手动修复，或者直接删除<code>subvolid</code>：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取subvolid</span></span><br/><span class="line">sudo btrfs sub list -u /</span><br/><span class="line"><span class="comment"># 编辑,根据自己情况，修复</span></span><br/><span class="line">vim /etc/fstab</span><br/></pre></td></tr></tbody></table></figure><h2 id="重启显示管理器（Xorg-x2F-Wayland）"><a href="https://xeonds.github.io/2023/09/05/arch-linux%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/#%E9%87%8D%E5%90%AF%E6%98%BE%E7%A4%BA%E7%AE%A1%E7%90%86%E5%99%A8%EF%BC%88Xorg-x2F-Wayland%EF%BC%89" class="headerlink" title="重启显示管理器（Xorg/Wayland）"></a>重启显示管理器（Xorg/Wayland）</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/></pre></td><td class="code"><pre><span class="line">sudo systemctl restart display-manager</span><br/></pre></td></tr></tbody></table></figure><h2 id="Vim"><a href="https://xeonds.github.io/2023/09/05/arch-linux%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/#Vim" class="headerlink" title="Vim"></a>Vim</h2><p>装上Arch之后我很快就把Vim装上了。结果发现没法和系统剪贴板联动。在Vim里边检查<code>has(clipboard)</code>之后发现，好像这个Vim不支持剪贴板。</p><p>解决方法：装<code>gvim</code>：<code>sudo pacman -S gvim</code>。会提示你是否卸载Vim，选是，配置不会删除所以放心删。安装完了之后你就会发现Vim还能用，而且剪贴板功能好了：</p><p><img src="https://xeonds.github.io/img/Pasted%20image%2020230926210217.png"/></p><h2 id="桌面目录映射"><a href="https://xeonds.github.io/2023/09/05/arch-linux%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/#%E6%A1%8C%E9%9D%A2%E7%9B%AE%E5%BD%95%E6%98%A0%E5%B0%84" class="headerlink" title="桌面目录映射"></a>桌面目录映射</h2><p>今天看到群里一个老哥家目录下的文件都堆到桌面了，顺便了解了一下关于桌面目录映射的问题。因为有时候中文模式创建的家目录下的文件夹都是中文，那个老哥就是改成英文目录的时候遇到了这个问题。</p><p><code>XDG_DESKTOP_DIR</code>这个环境变量的介绍，在archWiki上也能翻到。</p><blockquote><p><a href="https://wiki.archlinux.org/title/XDG_Base_Directory">XDG_DESKTOP_DIR是一个环境变量，用于指定用户的桌面文件夹的位置。它是XDG Base Directory规范</a><a href="https://wiki.archlinux.org/title/XDG_Base_Directory">1</a><a href="https://wiki.archlinux.org/title/XDG_user_directories">的一部分，该规范定义了一些标准的用户目录，如音乐、图片、下载等，以及一些用于存储配置、缓存、数据和状态的目录。XDG_DESKTOP_DIR的默认值是$HOME/Desktop，但用户可以通过编辑~/.config/user-dirs.dirs文件或使用xdg-user-dirs-update命令来修改它</a><a href="https://wiki.archlinux.org/title/XDG_user_directories">2</a>。</p><p><a href="https://wiki.archlinux.org/title/Desktop_entries">KDE桌面环境遵循XDG Base Directory规范，并使用XDG_DESKTOP_DIR变量来确定桌面文件夹的位置。如果用户更改了XDG_DESKTOP_DIR的值，KDE会自动更新桌面设置，并将桌面文件夹更改为新的位置。这样，用户可以灵活地管理自己的桌面文件夹，而不影响其他应用程序或桌面环境</a><a href="https://wiki.archlinux.org/title/Desktop_entries">3</a>。</p></blockquote><p>所以出问题的话看看<code>.config</code>底下配置炸没炸就行。</p><h2 id="添加多系统启动项"><a href="https://xeonds.github.io/2023/09/05/arch-linux%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/#%E6%B7%BB%E5%8A%A0%E5%A4%9A%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E9%A1%B9" class="headerlink" title="添加多系统启动项"></a>添加多系统启动项</h2><p>在安装Arch的时候，会发现中间有一步是<code>sudo vim /etc/default/grub</code>然后<code>grub-mkconfig -o /boot/grub/grub.cfg</code>。这一步就是先编辑grub的配置，然后生成grub文件到<code>/boot/grub/</code>下的配置文件中。因此，我们如果突然心血来潮想装个Windows玩玩<del>谁装啊</del>，就可以改改grub配置让它为我们添加启动项。</p><p>因为最终的配置项是由<code>grub-mkconfig</code>生成的，所以并不推荐直接修改这个文件。更好的做法是安装<code>os-prober</code>，然后挂载其他系统的分区，并编辑grub配置文件启用os探测，最后再用<code>grub-mkconfig</code>生成新的grub启动项文件。</p><blockquote><p>至于为啥grub现在默认禁用掉了os-prober，注释里边说的是因为安全问题所以禁用掉了。</p></blockquote><h2 id="代理配置"><a href="https://xeonds.github.io/2023/09/05/arch-linux%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/#%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE" class="headerlink" title="代理配置"></a>代理配置</h2><p>既然都上Arch了，那代理软件不得整个自由点的？直接扔了cfw，拥抱clash-core。具体配置教程参考<a href="https://blog.linioi.com/posts/clash-on-arch/">这篇</a>，我给个简洁版的：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/><span class="line">9</span><br/><span class="line">10</span><br/><span class="line">11</span><br/><span class="line">12</span><br/><span class="line">13</span><br/><span class="line">14</span><br/><span class="line">15</span><br/><span class="line">16</span><br/><span class="line">17</span><br/><span class="line">18</span><br/><span class="line">19</span><br/><span class="line">20</span><br/><span class="line">21</span><br/><span class="line">22</span><br/><span class="line">23</span><br/><span class="line">24</span><br/><span class="line">25</span><br/><span class="line">26</span><br/><span class="line">27</span><br/><span class="line">28</span><br/><span class="line">29</span><br/><span class="line">30</span><br/><span class="line">31</span><br/><span class="line">32</span><br/><span class="line">33</span><br/><span class="line">34</span><br/><span class="line">35</span><br/><span class="line">36</span><br/><span class="line">37</span><br/><span class="line">38</span><br/><span class="line">39</span><br/><span class="line">40</span><br/></pre></td><td class="code"><pre><span class="line"><span class="comment"># 实在懒得sudo了</span></span><br/><span class="line"><span class="comment"># 不过记得看清命令再回车</span></span><br/><span class="line">sudo su</span><br/><span class="line">pacman -S clash</span><br/><span class="line"><span class="built_in">mkdir</span> -p /etc/clash</span><br/><span class="line"></span><br/><span class="line"><span class="comment"># 然后从provider那里下载yaml配置文件</span></span><br/><span class="line"><span class="comment"># 假设文件名为config.yaml</span></span><br/><span class="line"><span class="built_in">mv</span> ./config.yaml /etc/clash/</span><br/><span class="line"><span class="comment"># 设置控制面板路径</span></span><br/><span class="line"><span class="comment"># 我这里的控制面板路径在/etc/clash/clash-dashboard</span></span><br/><span class="line"><span class="built_in">echo</span> <span class="string">&#39;external-ui: clash-dashboard&#39;</span> &gt;&gt; /etc/clash/config.yaml</span><br/><span class="line"></span><br/><span class="line"><span class="comment"># 配置环境变量，配完了记得重启/重新登陆一下</span></span><br/><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt;&gt; /etc/environment</span></span><br/><span class="line"><span class="string">https_proxy=http://127.0.0.1:7890</span></span><br/><span class="line"><span class="string">http_proxy=http://127.0.0.1:7890</span></span><br/><span class="line"><span class="string">all_proxy=http://127.0.0.1:7890</span></span><br/><span class="line"><span class="string">EOF</span></span><br/><span class="line"></span><br/><span class="line"><span class="comment"># 配置systemd服务项</span></span><br/><span class="line"><span class="comment"># 配完了就能开机自启动了哦</span></span><br/><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt; /etc/systemd/system/clash.service</span></span><br/><span class="line"><span class="string">[Unit]</span></span><br/><span class="line"><span class="string">Description=Clash daemon, A rule-based proxy in Go.</span></span><br/><span class="line"><span class="string">After=network.target</span></span><br/><span class="line"><span class="string"></span></span><br/><span class="line"><span class="string">[Service]</span></span><br/><span class="line"><span class="string">Type=simple</span></span><br/><span class="line"><span class="string">Restart=always</span></span><br/><span class="line"><span class="string">ExecStart=/usr/bin/clash -d /etc/clash # /usr/bin/clash 为绝对路径，请根据你实际情况修改</span></span><br/><span class="line"><span class="string"></span></span><br/><span class="line"><span class="string">[Install]</span></span><br/><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br/><span class="line"><span class="string">EOF</span></span><br/><span class="line"></span><br/><span class="line"><span class="comment">###############</span></span><br/><span class="line"><span class="comment"># clash，启动！</span></span><br/><span class="line"><span class="comment">###############</span></span><br/><span class="line">systemctl <span class="built_in">enable</span> --now clash.service</span><br/></pre></td></tr></tbody></table></figure><p>里边比较重要的一步是配置环境变量env，上回配置的时候忘了加<code>http</code>前缀，结果系统里边啥玩意都不认我的代理设置。</p><p>哦对，配置完成之后还得在系统里边设置好代理：</p><p><img src="https://xeonds.github.io/img/Pasted%20image%2020231023164736.png"/></p><blockquote><p>悲：cfw跑路之后clash-core也跑路了<br/>然后所有client都跑路了<br/>为clash家族 + 1s<br/>以及我的评价是：<br/><img src="https://xeonds.github.io/img/Pasted%20image%2020231103203831.png"/><br/>以及某作者的睿频：<br/>最适合这个民族的其实是一群小<br/>白围着大大转，大大通过小白的夸奖获得自我满足，然后小白的吃喝拉撒都包给大大解决的模式。通过这个项目我感觉我已经彻底认识到这个民族的前面为什么会有一堵墙了。没有墙哪来的大大。所以到处都是什么附件回帖可见，等级多少用户组可见，一个论坛一个大大供小白跪舔，不需要政府造墙，网民也会自发造墙。这尼玛连做个翻墙软件都要造墙，真是令人叹为观止。这是一个造了几干年墙的保守的农耕民族，缺乏对别人的基本尊重，不愿意分享，喜欢遮遮掩掩，喜欢小圈子抱团，大概这些传统是改不掉了吧。</p></blockquote><p>另外还有一个，就是切换节点必须得使用clash的控制端口（在<code>config.yaml</code>中给出，一般是<code>9090</code>），所以还必须得有个控制面板。一般Windows平台都是用<del>已经似了的</del>Clash For Windows作为控制面板的，而Linux这边使用<a href="https://clash.razord.top/">https://clash.razord.top/</a>也就是<del>也已经似了的</del><a href="https://github.com/Dreamacro/clash-dashboard/">Clash的官方控制面板</a>作为控制面板的。实在不行了可以用命令行下的TUI工具<code>clashctl</code>来手动切换节点，应该也能用。</p><h2 id="RDP连接Windows"><a href="https://xeonds.github.io/2023/09/05/arch-linux%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/#RDP%E8%BF%9E%E6%8E%A5Windows" class="headerlink" title="RDP连接Windows"></a>RDP连接Windows</h2><p>用Arch多了，有时候得偶尔远程一下Windows。配置了半天<code>Remmina</code>+<code>freerdp</code>，可能这玩意和我风水不合吧，半天跑不起来。遂尝试了下<code>rdesktop</code>，秒连（也不知道为啥）：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/></pre></td><td class="code"><pre><span class="line">sudo pacman -S rdesktop</span><br/><span class="line">rdesktop 114.5.1.4</span><br/></pre></td></tr></tbody></table></figure><p>然后输账号密码登陆就行了。因为暂时这样就够用所以就没咋折腾。</p><h2 id="X11迁移Wayland"><a href="https://xeonds.github.io/2023/09/05/arch-linux%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/#X11%E8%BF%81%E7%A7%BBWayland" class="headerlink" title="X11迁移Wayland"></a>X11迁移Wayland</h2><p>主要动机：支持一下双屏不同缩放的功能，不然一个高分屏+一个普通1080p的组合太痛苦了。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/></pre></td><td class="code"><pre><span class="line">pacman -Qi wayland  <span class="comment"># 已安装则继续，否则安装</span></span><br/><span class="line">sudo pacman -S --needed wayland</span><br/><span class="line">yay -S sddm-git     <span class="comment"># 必须得是sddm-git，其他版本好像没完善的Wayland支持</span></span><br/><span class="line">pacman -S --needed xorg-xwayland xorg-xlsclients qt5-wayland glfw-wayland</span><br/><span class="line">pacman -S --needed plasma kde-applications</span><br/><span class="line">pacman -S --needed plasma-wayland-session</span><br/></pre></td></tr></tbody></table></figure><p>按照<a href="https://linux.cn/article-16171-1.html">这里</a>给出的流程，装完上面的包之后，Logout之后应该就能在左下角看到登陆<code>Plasma(Wayland)</code>的提示了。</p><blockquote><p>你还能通过查看 <code>$XDG_SESSION_TYPE</code> 变量来 核实你是否在运行 <code>Wayland</code>。</p></blockquote><p>先去装了，一会回来记录。</p><p>装完了，兼容性没啥大问题，我甚至没重启，只是重新登陆了下。就是<code>latte-dock</code>的图标缩放看着怪怪的，而且桌面小组件也乱飞了。以及，输入法好像不太对劲，在firefox以外的地方皮肤会丢失。</p><p>刚重新设置了下屏幕排列，现在能单独设置两块屏幕的缩放了，爽。就是高分屏看着有点糊，以及字体缩放问题，还有这个fcitx也不太对劲。</p><p>关于fcitx，系统给了一段报错：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/></pre></td><td class="code"><pre><span class="line">Fcitx should be launched by KWin under KDE Wayland in order to use Wayland input method frontend. This can improve the experience when using Fcitx on Wayland. To configure this, you need to go to &#34;System Settings&#34; -&gt; &#34;Virtual keyboard&#34; and select &#34;Fcitx 5&#34; from it. You may also need to disable tools that launches input method, such as imsettings on Fedora, or im-config on Debian/Ubuntu. For more details see https://fcitx-im.org/wiki/Using_Fcitx_5_on_Wayland#KDE_Plasma </span><br/></pre></td></tr></tbody></table></figure><p>先重启下看看吧。</p><p>草了，重启回来变回x11 seession了。找找默认值在哪保存着吧。</p><p>找到了，在<code>/usr/lib/sddm/sddm.conf.d/default.conf</code>里边，有一个<code>DisplayServer=x11</code>的项，把<code>x11</code>改为<code>wayland</code>应该就行了。重启看看。</p><p>好像不太行，而且现在切不过去Wayland了，坏。</p><p>把设置都改回去了，现在好像能进去了。但是还是默认进入x11的plasma桌面。</p><p>哎，把用户空间的那个sddm configuration改了一下，删了里边的[Autologin]底下的session=的值，重启下试试。以及又得到了一段关于fcitx的建议：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/></pre></td><td class="code"><pre><span class="line">Detect GTK_IM_MODULE and QT_IM_MODULE being set and Wayland Input method frontend is working. It is recommended to unset GTK_IM_MODULE and QT_IM_MODULE and use Wayland input method frontend instead. For more details see https://fcitx-im.org/wiki/Using_Fcitx_5_on_Wayland#KDE_Plasma</span><br/></pre></td></tr></tbody></table></figure><p>好好好搞定了。按照上面的设置先屏蔽了俩环境变量，然后删除了默认值，现在系统已经处于完全可用的状态。回头有时间了整理整理过程。</p><blockquote><p>Fri 22 Dec 2023 05:14:55 PM CST</p></blockquote></body></html>