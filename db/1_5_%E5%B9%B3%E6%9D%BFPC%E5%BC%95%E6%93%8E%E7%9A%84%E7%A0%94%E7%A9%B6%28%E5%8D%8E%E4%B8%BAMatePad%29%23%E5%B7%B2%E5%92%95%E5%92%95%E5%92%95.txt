<html><head></head><body><p>因为里面的东西基本上都写死了，没什么可玩性，就咕咕了，感兴趣可以自己去反编译一下，学习下实现的原理。</p><p>本文章，咕咕咕，不再完善了。</p><h2 id="序言"><a href="https://xiue233.github.io/2023/09/13/pc-engine-in-huawei-matepad/#%E5%BA%8F%E8%A8%80" class="headerlink" title="序言"></a>序言</h2><p>因为华子的平板手写功能还算可以，在国内的平板里算是好的，价格也能接受，于是买了一个 Matepad11 2021 款。桌面上默认有一个 <code>WPS for PC</code> 图标，也就是所宣传的：自研PC引擎，打造PC级办公软件。打开后可以看到，是Linux下WPS的界面，在关于里面也确实写着是 <code>WPS for Linux</code>。</p><p>那么PC引擎是怎么实现的呢？</p><h2 id="切入点"><a href="https://xiue233.github.io/2023/09/13/pc-engine-in-huawei-matepad/#%E5%88%87%E5%85%A5%E7%82%B9" class="headerlink" title="切入点"></a>切入点</h2><p>要想研究它的原理，肯定是找到相关的代码实现最为靠谱。不妨简单分析一下：</p><ol><li>桌面上的图标被点击后是通过<code>Intent</code>调起应用，那么必定会先由Java层处理(即使是Native方法也是由JVM调起的)，既然由Java层处理，那么在Android下必然会存在一个app来包含此操作；</li></ol><p>2.同理，既然<code>WPS for PC</code>有桌面图标，则必定存在相关功能APP。</p><p>之后，打开应用管理，可以搜索到一个相关应用：《华为 PC 应用引擎》。</p><h2 id="华为-PC-应用引擎-的APK分析"><a href="https://xiue233.github.io/2023/09/13/pc-engine-in-huawei-matepad/#%E5%8D%8E%E4%B8%BA-PC-%E5%BA%94%E7%94%A8%E5%BC%95%E6%93%8E-%E7%9A%84APK%E5%88%86%E6%9E%90" class="headerlink" title="华为 PC 应用引擎 的APK分析"></a>华为 PC 应用引擎 的APK分析</h2><p>话不多说，apktool伺候，简单的<code>java -jar apktool.jar d pc_engine.apk</code>。</p><h3 id="实现原理简单分析"><a href="https://xiue233.github.io/2023/09/13/pc-engine-in-huawei-matepad/#%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%E7%AE%80%E5%8D%95%E5%88%86%E6%9E%90" class="headerlink" title="实现原理简单分析"></a>实现原理简单分析</h3><p>实际上就是在根目录下建了个文件夹，通过<code>iSula容器引擎</code>实现了一个Linux容器，在里面利用Remote Desktop Procotol实现界面的展示。</p><h3 id="相关代码"><a href="https://xiue233.github.io/2023/09/13/pc-engine-in-huawei-matepad/#%E7%9B%B8%E5%85%B3%E4%BB%A3%E7%A0%81" class="headerlink" title="相关代码"></a>相关代码</h3><h4 id="启动-HslDaemon"><a href="https://xiue233.github.io/2023/09/13/pc-engine-in-huawei-matepad/#%E5%90%AF%E5%8A%A8-HslDaemon" class="headerlink" title="启动 HslDaemon"></a>启动 HslDaemon</h4><pre><code class="java">Intent intent2 = new Intent();intent2.setFlags(268435456);intent2.setComponent(new ComponentName(&#34;com.huawei.hsl&#34;, &#34;com.huawei.hsl.MainActivity&#34;));Bundle bundle = new Bundle();bundle.putString(&#34;com.huawei.hsldaemon.appName&#34;, &#34;HslDaemon&#34;);intent2.putExtras(bundle);activity.startActivity(intent2)</code></pre></body></html>