<html><head></head><body><p>2023 XDU-OSC Community - Presented with love by BenderBlog/SuperBart</p><p>借助Flutter，他重新实现了校内十分流行的工具软件电表，使得用iOS的同学也有了自己的电表可用。开源和Flutter带来的，对于开发工作的简化<del>以及SuperBart的超级肝力</del>都成为了它能迅速上架iOS并迅速迭代的原因。</p><p>原生的电表iOS版本使用了iOS Native开发，在开发效率上略低于先天统一了不同平台实现的Flutter。在运行效率上的提升在业务都相对比较简单的情况下并没有很显著的优势。</p><p>其实上面这点也是现在原生客户端开发面对的问题。原生带来了更细致入微的操作粒度，带来更极致的原生性能利用率的同时，对于开发者心智的负担要求很高，也对开发者的能力深入性和熟练度提出了很高的要求；应对这一点的解决方案，有使用Web技术统一全端（就是性能问题和资源利用率一直饱受诟病），也有使用像Flutter这样的混合跨平台框架。后者性能损失相对没那么严重，跨平台能力也相对不错，但是动态程序的本质让它对于低性能设备的友好度较低（比如现在的百度贴吧客户端就是Flutter客户端，面对长列表的加载等场景偶尔会出现崩溃等问题）。</p><p>开发效率和程序运行表现基本是一对负相关的参数，其中的取舍就是开发者需要考虑的问题。在程序开发领域，没有银弹。</p><h2 id="SuperBart的讲座"><a href="https://mxts.jiujiuer.xyz/2023/09/16/flutter-intro/#SuperBart%E7%9A%84%E8%AE%B2%E5%BA%A7" class="headerlink" title="SuperBart的讲座"></a>SuperBart的讲座</h2><h3 id="Flutter概要"><a href="https://mxts.jiujiuer.xyz/2023/09/16/flutter-intro/#Flutter%E6%A6%82%E8%A6%81" class="headerlink" title="Flutter概要"></a>Flutter概要</h3><p>一套代码 (<code>./lib</code>), 多平台运行.</p><blockquote><p>android, windows, linux, ios等.</p></blockquote><ul><li>面向客户端</li><li>平台无关</li><li>上手简单</li></ul><p>Flutter的开发语言是Dart，初见印象：Dart= JS/C++(语言友好度和性能上) + Java(代码风格上) + Dart VM</p><h3 id="Basic-code-format"><a href="https://mxts.jiujiuer.xyz/2023/09/16/flutter-intro/#Basic-code-format" class="headerlink" title="Basic code format"></a>Basic code format</h3><p>tldr</p><ul><li>Empty safety: <code>type?</code> means var is nullable</li></ul><p>This will trigger empty check, avoid npe</p><ul><li>late init</li></ul><p>Just like Kotlin</p><ul><li>Async</li></ul><h3 id="Basic-layouts"><a href="https://mxts.jiujiuer.xyz/2023/09/16/flutter-intro/#Basic-layouts" class="headerlink" title="Basic layouts"></a>Basic layouts</h3><ul><li>Widget</li><li>Text</li><li>Warp</li><li>Row-Column</li><li>Container</li></ul><h3 id="Basic-scaffolds"><a href="https://mxts.jiujiuer.xyz/2023/09/16/flutter-intro/#Basic-scaffolds" class="headerlink" title="Basic scaffolds"></a>Basic scaffolds</h3><ul><li>AppBar</li><li>Action</li><li>TItle</li><li>TabBar</li><li>Body</li><li>BottomBar</li></ul><h3 id="Network"><a href="https://mxts.jiujiuer.xyz/2023/09/16/flutter-intro/#Network" class="headerlink" title="Network"></a>Network</h3><p>主要使用<code>Flutter</code>的<code>Dio</code>。不过我用<code>http/http.dart</code>更多。</p><h2 id="开发笔记"><a href="https://mxts.jiujiuer.xyz/2023/09/16/flutter-intro/#%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0" class="headerlink" title="开发笔记"></a>开发笔记</h2><p>评价是Flutter这玩意搓东西真的快。</p><p>Flutter使用的dart语言，强类型和可写性平衡的挺舒服的。语法上，Dart算是JavaScript的继承，语法大差不差，改进了JavaScript混乱的类型系统，还封装了不少挺不错的语法特性，比如那个Future，用着还行。还有内置的高级数据结构之类的，用着挺省心。</p><p>不过写这东西，我好像很少单独注意语法层面的东西，一般都是定义个返回Widget的build函数完事。另外这语言比较像DSL，没见过别处有用这玩意的。</p><h3 id="关于WebViewWidget"><a href="https://mxts.jiujiuer.xyz/2023/09/16/flutter-intro/#%E5%85%B3%E4%BA%8EWebViewWidget" class="headerlink" title="关于WebViewWidget"></a>关于WebViewWidget</h3><p>这玩意比较坑的一点是它只支持Android和iOS平台，对于Windows/Linux/Web平台，这玩意都是不支持的。。</p><p>所以review同学的代码的时候，发现在我用Linux平台跑的时候报错了。搜了下才发现这问题。</p><p>不过也无所谓了，反正这玩意本来就只是在Android/iOS上跑的。</p><h3 id="关于TextEditController"><a href="https://mxts.jiujiuer.xyz/2023/09/16/flutter-intro/#%E5%85%B3%E4%BA%8ETextEditController" class="headerlink" title="关于TextEditController"></a>关于TextEditController</h3><p>声明一个文本框时，它会默认初始化一个TextEditController。如果你传递给它你定义的Controller，它就会使用你提供的而不是自己创建。另外特别注意，给TextField赋值这一项的行为不是常量表达式，不能在它和它的父结构中使用<code>const</code>关键字。</p><h3 id="关于sqflite"><a href="https://mxts.jiujiuer.xyz/2023/09/16/flutter-intro/#%E5%85%B3%E4%BA%8Esqflite" class="headerlink" title="关于sqflite"></a>关于sqflite</h3><p>这玩意有大坑（关于平台兼容性上的）。反正我目前尝试之后发现要么支持Windows/Linux/Mac等桌面端，要么支持Android/iOS等移动端的SQLite使用。</p><h3 id="关于ListView"><a href="https://mxts.jiujiuer.xyz/2023/09/16/flutter-intro/#%E5%85%B3%E4%BA%8EListView" class="headerlink" title="关于ListView"></a>关于ListView</h3><p>关于这个东西，得注意的就是嵌套使用。嵌套的子<code>ListView</code>，需要设置如下两个属性来避免滚定判定失效：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/></pre></td><td class="code"><pre><span class="line">shrinkWrap: true,</span><br/><span class="line">physics: const NeverScrollableScrollPhysics(),</span><br/></pre></td></tr></tbody></table></figure></body></html>