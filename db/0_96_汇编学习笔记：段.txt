<html><head></head><body><blockquote><p>[[Assembly|汇编笔记系列]]</p></blockquote><p>直接上例程吧：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/><span class="line">9</span><br/><span class="line">10</span><br/><span class="line">11</span><br/><span class="line">12</span><br/><span class="line">13</span><br/><span class="line">14</span><br/><span class="line">15</span><br/><span class="line">16</span><br/><span class="line">17</span><br/><span class="line">18</span><br/><span class="line">19</span><br/><span class="line">20</span><br/><span class="line">21</span><br/><span class="line">22</span><br/><span class="line">23</span><br/><span class="line">24</span><br/><span class="line">25</span><br/><span class="line">26</span><br/><span class="line">27</span><br/><span class="line">28</span><br/><span class="line">29</span><br/><span class="line">30</span><br/><span class="line">31</span><br/><span class="line">32</span><br/><span class="line">33</span><br/><span class="line">34</span><br/><span class="line">35</span><br/><span class="line">36</span><br/><span class="line">37</span><br/><span class="line">38</span><br/><span class="line">39</span><br/><span class="line">40</span><br/><span class="line">41</span><br/><span class="line">42</span><br/><span class="line">43</span><br/></pre></td><td class="code"><pre><span class="line">assume cs:code,ds:data,ss:stack</span><br/><span class="line"></span><br/><span class="line">data segment</span><br/><span class="line"></span><br/><span class="line">    dw 0123h,0456h,0789h,0abch,0defh,0fedh,0cbah,0987h</span><br/><span class="line"></span><br/><span class="line">dw ends</span><br/><span class="line"></span><br/><span class="line">stack segment</span><br/><span class="line"></span><br/><span class="line">    dw 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0</span><br/><span class="line"></span><br/><span class="line">stack ends</span><br/><span class="line"></span><br/><span class="line">code segment</span><br/><span class="line"></span><br/><span class="line">start:  mov ax,stack</span><br/><span class="line">        mov ss,ax</span><br/><span class="line">        mov sp,20h    ;设置栈顶ss:sp指向stack:20</span><br/><span class="line"></span><br/><span class="line">        mov ax,data</span><br/><span class="line">        mov ds,ax</span><br/><span class="line"></span><br/><span class="line">        mov bx,0</span><br/><span class="line"></span><br/><span class="line">        mov cx,8</span><br/><span class="line">    s:  push [bx]</span><br/><span class="line">        add bx,2</span><br/><span class="line">        loop s</span><br/><span class="line"></span><br/><span class="line">        mov bx,0</span><br/><span class="line"></span><br/><span class="line">        mov cx,8</span><br/><span class="line">    s0: pop [bx]</span><br/><span class="line">        add bx,2</span><br/><span class="line">        loop s0</span><br/><span class="line"></span><br/><span class="line">        mov ax,4c00h</span><br/><span class="line">        int 21h</span><br/><span class="line"></span><br/><span class="line">code ends</span><br/><span class="line"></span><br/><span class="line">end start</span><br/></pre></td></tr></tbody></table></figure><p>简单来说，段可以把程序划分为多个部分，便于我们更清晰地组织指令，数据和栈。</p><p>一个程序可以有多个段，只需要使用不同的段名即可。那么编译器怎么知道程序从哪里开始执行呢？从start标号开始。同样，这个标号的名称也是由我们自己确定的。</p><p>每个段的地址是<code>段名：0000H</code>。这样的设计十分方便我们随时使用不同的段。如此组织代码，数据和栈，程序就显得十分清晰。所以，多多使用段吧。</p></body></html>