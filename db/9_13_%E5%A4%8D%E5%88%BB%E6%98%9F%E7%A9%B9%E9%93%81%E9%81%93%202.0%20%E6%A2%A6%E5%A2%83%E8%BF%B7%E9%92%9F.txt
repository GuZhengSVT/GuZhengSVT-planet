<html><head></head><body><h1 id="复刻星穹铁道-20-梦境迷钟">复刻星穹铁道 2.0 梦境迷钟<a class="headerlink" href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#%E5%A4%8D%E5%88%BB%E6%98%9F%E7%A9%B9%E9%93%81%E9%81%93-20-%E6%A2%A6%E5%A2%83%E8%BF%B7%E9%92%9F" title="Permanent link">¶</a></h1><!-- more --><p>简单复刻，重点在图的构建和寻路上。只做了一种视角，两个关卡。</p><div class="responsive-video-container"> <iframe src="https://player.bilibili.com/player.html?aid=1250735475&amp;bvid=BV1kJ4m1W76K&amp;cid=1440682002&amp;p=2&amp;autoplay=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe></div><p>GitHub: <a href="https://github.com/stalomeow/DreamTicker">https://github.com/stalomeow/DreamTicker</a>。</p><h2 id="渲染">渲染<a class="headerlink" href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#%E6%B8%B2%E6%9F%93" title="Permanent link">¶</a></h2><p>重点：</p><ul><li>相机用正交投影，不要透视投影的近大远小的效果。</li><li>相机朝向必须和正方体的某个体对角线平行，否则做不到游戏里的效果。我用的相机欧拉角是 <span class="arithmatex">\((\arcsin\dfrac{1}{\sqrt{3}},-\dfrac{\pi}{4},0)\)</span>。</li><li>方块被分成镜子前、镜子内、镜子后三部分，提前放在场景里。</li></ul><p>渲染流程： </p><ol><li>镜子写入模板值 <code>1</code>（不输出颜色）</li><li><p>绘制方块</p><ul><li>镜子前的：模板测试 <code>Always</code></li><li>镜子内的：模板测试 <code>Equal 1</code></li><li>镜子外的：模板测试 <code>NotEqual 1</code></li></ul></li><li><p>绘制角色（深度测试 <code>Always</code>，避免被方块挡住）</p></li><li>绘制半透明的镜子</li></ol><h2 id="建图">建图<a class="headerlink" href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#%E5%BB%BA%E5%9B%BE" title="Permanent link">¶</a></h2><p>这是一个视错觉游戏，在三维空间中不可能的路径，只要从玩家的视角看上去没问题就能行走，所以，很容易想到把方块变换到 viewport space 或者 screen space 再建图。</p><p>实际试下来，发现这两个 space 存在一些缺点：</p><ul><li>坐标依赖玩家的屏幕分辨率。不同分辨率下，算出来结果存在一些差异。</li><li>方块坐标和边长都不是整数。由于浮点数计算存在误差，计算相邻方块的坐标时经常算不准，没法在 <code>Dictionary&lt;Vector2, Block&gt;</code> 里访问到相应的方块。</li></ul><p>考虑到相机用的是正交投影，其矩阵为</p><div class="arithmatex">\[\begin{bmatrix} \dfrac{2}{r-l} &amp;0 &amp;0 &amp;-\dfrac{r+l}{r-l} \\ 0 &amp;\dfrac{2}{t-b} &amp;0 &amp;-\dfrac{t+b}{t-b} \\ 0 &amp;0 &amp;-\dfrac{2}{f-n} &amp;-\dfrac{f+n}{f-n} \\ 0 &amp;0 &amp;0 &amp;1\end{bmatrix}\]</div><p>其中，<span class="arithmatex">\(r,l,t,b,f,n\)</span> 分别为视锥体的 right, left, top, bottom, far, near。Unity 的视锥体是对称的，即满足</p><div class="arithmatex">\[\left\{\begin{matrix} r+l&amp;=0 \\ t+b&amp;=0\end{matrix}\right.\]</div><p>所以，正交投影矩阵化简为</p><div class="arithmatex">\[\begin{bmatrix} \dfrac{2}{r-l} &amp;0 &amp;0 &amp;0 \\ 0 &amp;\dfrac{2}{t-b} &amp;0 &amp;0 \\ 0 &amp;0 &amp;-\dfrac{2}{f-n} &amp;-\dfrac{f+n}{f-n} \\ 0 &amp;0 &amp;0 &amp;1\end{bmatrix}\]</div><p>对于 view space 的点 <span class="arithmatex">\((x,y,z)\)</span> 用上面的矩阵变换到 NDC 后是</p><div class="arithmatex">\[(\dfrac{2}{r-l}x,\dfrac{2}{t-b}y,-\dfrac{2}{f-n}z-\dfrac{f+n}{f-n})\]</div><p>发现 <span class="arithmatex">\(x\)</span> 和 <span class="arithmatex">\(y\)</span> 只是被缩放了常数倍。从 NDC 到 viewport space 或者 screen space 都是对 <span class="arithmatex">\(x\)</span> 和 <span class="arithmatex">\(y\)</span> 分别进行两种相同的线性变换。所以，从 view space 到 viewport space 或者 screen space 就是对 <span class="arithmatex">\(x\)</span> 和 <span class="arithmatex">\(y\)</span> 做了一些线性变换，完全可以省略。可以这样理解：一张照片在家里看和在学校里看没有差别，放大 10 倍和原大小整体上也没差别。</p><p>考虑到一个方块只有朝上的面才能行走，并且这个面从屏幕上看是一个平行四边形，不难构造出下面这个二维斜坐标系。任意选一个方块，将它朝上的那个面的中心作为原点。</p><p><img alt="坐标系" src="https://note.stalomeow.com/obsidian-vault/attachments/unity_hsr_dream_ticker_explain.png"/></p><p>若以平行四边形格子的中心点表示该格，则 <span class="arithmatex">\((x,y)\)</span> 右边一格为 <span class="arithmatex">\((x+1,y)\)</span>，前面一格为 <span class="arithmatex">\((x,y+1)\)</span>，且 <span class="arithmatex">\(x,y\)</span> 均为整数。只要能把原来的三维地图转化成这个平行四边形网格，剩下的就很简单了。</p><h3 id="计算方块对应格子的坐标">计算方块对应格子的坐标<a class="headerlink" href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#%E8%AE%A1%E7%AE%97%E6%96%B9%E5%9D%97%E5%AF%B9%E5%BA%94%E6%A0%BC%E5%AD%90%E7%9A%84%E5%9D%90%E6%A0%87" title="Permanent link">¶</a></h3><p>将一个方块朝上的那个面的中心点称为 <code>UpperCenter</code>。</p><p>设某方块的 <code>UpperCenter</code> 在 view space 的坐标为 <span class="arithmatex">\((x,y,z)^T\)</span>，变换到斜坐标系后是 <span class="arithmatex">\((x&#39;,y&#39;)^T\)</span>。作为斜坐标系原点的 <code>UpperCenter</code> 在 view space 的坐标为 <span class="arithmatex">\((O_x,O_y,O_z)^T\)</span>。</p><p>将 world space 的两个<strong>方向</strong> <span class="arithmatex">\((1,0,0)^T\)</span> 和 <span class="arithmatex">\((0,0,1)^T\)</span> 变换到 view space，只取 x 和 y 分量，不要归一化，记为 <span class="arithmatex">\(\vec{a}\)</span> 和 <span class="arithmatex">\(\vec{b}\)</span>。这就是斜坐标系的两个基向量在 view space 的表示。</p><p>可求得</p><div class="arithmatex">\[\begin{bmatrix} x&#39;\\ y&#39;\end{bmatrix} = \begin{bmatrix} \vec{a} &amp; \vec{b}\end{bmatrix}^{-1} \left (\begin{bmatrix} x\\ y\end{bmatrix}-\begin{bmatrix} O_x\\ O_y\end{bmatrix} \right )\]</div><h3 id="根据镜子做剔除">根据镜子做剔除<a class="headerlink" href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#%E6%A0%B9%E6%8D%AE%E9%95%9C%E5%AD%90%E5%81%9A%E5%89%94%E9%99%A4" title="Permanent link">¶</a></h3><p>镜子前的方块不用管，全部保留即可。镜子内的方块只有玩家能看到的部分才算入网格地图中，镜子后的方块同理。镜子会把方块裁成不同形状，如下图。</p><p><img alt="镜子" src="https://note.stalomeow.com/obsidian-vault/attachments/unity_hsr_dream_ticker_explain2.png"/></p><p>一个方块在当前视角下看是一个正六边形，根据对角线可以分成 6 个三角形。镜子只能横向移动，对移动后的坐标进行限制，可以保证这些三角形不被分割。</p><p>镜子在斜坐标系里是一个平行四边形，四条边的直线方程很容易算。上图中，红线的斜率是 <span class="arithmatex">\(0\)</span>，黄线的斜率是 <span class="arithmatex">\(-1\)</span>。只要知道镜子某个角的坐标，还有长和宽，就能算出四条直线方程。</p><p>如果一个三角形的重心在平行四边形内，这个三角形就是在镜子里，否则就在镜子外。</p><ul><li>对镜子内的方块，把不在镜子里的三角形删掉。</li><li>对镜子后的方块，把在镜子里的三角形删掉。</li></ul><h3 id="根据遮挡关系做剔除">根据遮挡关系做剔除<a class="headerlink" href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#%E6%A0%B9%E6%8D%AE%E9%81%AE%E6%8C%A1%E5%85%B3%E7%B3%BB%E5%81%9A%E5%89%94%E9%99%A4" title="Permanent link">¶</a></h3><p>方块之间存在遮挡关系，比如下面红色的面就被挡住了，它就不能算入网格地图中。</p><p><img alt="遮挡关系" src="https://note.stalomeow.com/obsidian-vault/attachments/unity_hsr_dream_ticker_explain3.png"/></p><p>这部分的剔除还是以之前提到的三角形为单位。</p><p>这里其实有参考一点 Hi-Z 的思路。先把之前剔除下来的三角形的 view space z 都写入到一张 <code>zMap</code> 里，写入时只保留最大值。换句话说 <code>zMap</code> 存的是各点处离相机最近的三角形的 z 值。</p><div class="highlight"><table class="highlighttable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre><span></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-0-1"> 1</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-0-2"> 2</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-0-3"> 3</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-0-4"> 4</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-0-5"> 5</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-0-6"> 6</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-0-7"> 7</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-0-8"> 8</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-0-9"> 9</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-0-10">10</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-0-11">11</a></span></pre></div></td><td class="code"><div><pre><span></span><code><span id="__span-0-1"><a id="__codelineno-0-1" name="__codelineno-0-1"></a><span class="k">private</span><span class="w"> </span><span class="k">static</span><span class="w"> </span><span class="k">void</span><span class="w"> </span><span class="nf">SetZMap</span><span class="p">(</span><span class="n">Dictionary</span><span class="o">&lt;</span><span class="n">Vector2Int</span><span class="p">,</span><span class="w"> </span><span class="kt">float</span><span class="o">&gt;</span><span class="w"> </span><span class="n">zMap</span><span class="p">,</span><span class="w"> </span><span class="n">Vector2Int</span><span class="w"> </span><span class="n">key</span><span class="p">,</span><span class="w"> </span><span class="kt">float</span><span class="w"> </span><span class="n">z</span><span class="p">)</span></span><span id="__span-0-2"><a id="__codelineno-0-2" name="__codelineno-0-2"></a><span class="p">{</span></span><span id="__span-0-3"><a id="__codelineno-0-3" name="__codelineno-0-3"></a><span class="w"> </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="o">!</span><span class="n">zMap</span><span class="p">.</span><span class="n">TryGetValue</span><span class="p">(</span><span class="n">key</span><span class="p">,</span><span class="w"> </span><span class="k">out</span><span class="w"> </span><span class="kt">float</span><span class="w"> </span><span class="n">depth</span><span class="p">))</span></span><span id="__span-0-4"><a id="__codelineno-0-4" name="__codelineno-0-4"></a><span class="w"> </span><span class="p">{</span></span><span id="__span-0-5"><a id="__codelineno-0-5" name="__codelineno-0-5"></a><span class="w"> </span><span class="n">zMap</span><span class="p">[</span><span class="n">key</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">z</span><span class="p">;</span></span><span id="__span-0-6"><a id="__codelineno-0-6" name="__codelineno-0-6"></a><span class="w"> </span><span class="p">}</span></span><span id="__span-0-7"><a id="__codelineno-0-7" name="__codelineno-0-7"></a><span class="w"> </span><span class="k">else</span></span><span id="__span-0-8"><a id="__codelineno-0-8" name="__codelineno-0-8"></a><span class="w"> </span><span class="p">{</span></span><span id="__span-0-9"><a id="__codelineno-0-9" name="__codelineno-0-9"></a><span class="w"> </span><span class="n">zMap</span><span class="p">[</span><span class="n">key</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Mathf</span><span class="p">.</span><span class="n">Max</span><span class="p">(</span><span class="n">depth</span><span class="p">,</span><span class="w"> </span><span class="n">z</span><span class="p">);</span></span><span id="__span-0-10"><a id="__codelineno-0-10" name="__codelineno-0-10"></a><span class="w"> </span><span class="p">}</span></span><span id="__span-0-11"><a id="__codelineno-0-11" name="__codelineno-0-11"></a><span class="p">}</span></span></code></pre></div></td></tr></tbody></table></div><p>三角形的 z 值不需要很准确，够用就行。我直接把 <code>UpperCenter</code> 变换到 view space 后的 z 值作为该方块（投影的正六边形）里所有三角形的 z。</p><p>把每个格子拆分成下图中的 Lower Triangle 和 Upper Triangle。<code>zMap</code> 分成 <code>zMapLower</code> 和 <code>zMapUpper</code>，分别记录 Lower Triangle 和 Upper Triangle。</p><p><img alt="上下三角的定义" src="https://note.stalomeow.com/obsidian-vault/attachments/unity_hsr_dream_ticker_explain4.png"/></p><p>正六边形则分成下面的六个三角形。</p><p><img alt="正六边形的分割" src="https://note.stalomeow.com/obsidian-vault/attachments/unity_hsr_dream_ticker_explain5.png"/></p><p>遍历正六边形里的三角形，写入 z 值，然后再把被挡住的三角形删掉。</p><div class="highlight"><table class="highlighttable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre><span></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-1"> 1</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-2"> 2</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-3"> 3</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-4"> 4</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-5"> 5</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-6"> 6</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-7"> 7</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-8"> 8</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-9"> 9</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-10">10</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-11">11</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-12">12</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-13">13</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-14">14</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-15">15</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-16">16</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-17">17</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-18">18</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-19">19</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-20">20</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-21">21</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-22">22</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-23">23</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-24">24</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-25">25</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-26">26</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-27">27</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-28">28</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-29">29</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-30">30</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-31">31</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-32">32</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-33">33</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-34">34</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-35">35</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-36">36</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-37">37</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-38">38</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-39">39</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-40">40</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-41">41</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-42">42</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-43">43</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-44">44</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-45">45</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-46">46</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-47">47</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-48">48</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-49">49</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-50">50</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-1-51">51</a></span></pre></div></td><td class="code"><div><pre><span></span><code><span id="__span-1-1"><a id="__codelineno-1-1" name="__codelineno-1-1"></a><span class="k">private</span><span class="w"> </span><span class="k">void</span><span class="w"> </span><span class="nf">CullBlocksByViewSpaceZ</span><span class="p">(</span><span class="n">Dictionary</span><span class="o">&lt;</span><span class="n">Vector2Int</span><span class="p">,</span><span class="w"> </span><span class="n">BlockGroup</span><span class="o">&gt;</span><span class="w"> </span><span class="n">bMap</span><span class="p">)</span></span><span id="__span-1-2"><a id="__codelineno-1-2" name="__codelineno-1-2"></a><span class="p">{</span></span><span id="__span-1-3"><a id="__codelineno-1-3" name="__codelineno-1-3"></a><span class="w"> </span><span class="n">Dictionary</span><span class="o">&lt;</span><span class="n">Vector2Int</span><span class="p">,</span><span class="w"> </span><span class="kt">float</span><span class="o">&gt;</span><span class="w"> </span><span class="n">zMapLower</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="p">();</span></span><span id="__span-1-4"><a id="__codelineno-1-4" name="__codelineno-1-4"></a><span class="w"> </span><span class="n">Dictionary</span><span class="o">&lt;</span><span class="n">Vector2Int</span><span class="p">,</span><span class="w"> </span><span class="kt">float</span><span class="o">&gt;</span><span class="w"> </span><span class="n">zMapUpper</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="p">();</span></span><span id="__span-1-5"><a id="__codelineno-1-5" name="__codelineno-1-5"></a></span><span id="__span-1-6"><a id="__codelineno-1-6" name="__codelineno-1-6"></a><span class="w"> </span><span class="k">foreach</span><span class="w"> </span><span class="p">(</span><span class="kt">var</span><span class="w"> </span><span class="n">block</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">bMap</span><span class="p">.</span><span class="n">Values</span><span class="p">.</span><span class="n">SelectMany</span><span class="p">(</span><span class="n">g</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">g</span><span class="p">))</span></span><span id="__span-1-7"><a id="__codelineno-1-7" name="__codelineno-1-7"></a><span class="w"> </span><span class="p">{</span></span><span id="__span-1-8"><a id="__codelineno-1-8" name="__codelineno-1-8"></a><span class="w"> </span><span class="k">if</span><span class="w"> </span><span class="p">((</span><span class="n">block</span><span class="p">.</span><span class="n">ProjectedShapes</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="n">BlockProjectedShapes</span><span class="p">.</span><span class="n">LeftUpperTriangle</span><span class="p">)</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="m">0</span><span class="p">)</span></span><span id="__span-1-9"><a id="__codelineno-1-9" name="__codelineno-1-9"></a><span class="w"> </span><span class="p">{</span></span><span id="__span-1-10"><a id="__codelineno-1-10" name="__codelineno-1-10"></a><span class="w"> </span><span class="n">SetZMap</span><span class="p">(</span><span class="n">zMapLower</span><span class="p">,</span><span class="w"> </span><span class="n">block</span><span class="p">.</span><span class="n">ProjectedXY</span><span class="p">,</span><span class="w"> </span><span class="n">block</span><span class="p">.</span><span class="n">ViewSpaceUpperCenterZ</span><span class="p">);</span></span><span id="__span-1-11"><a id="__codelineno-1-11" name="__codelineno-1-11"></a><span class="w"> </span><span class="p">}</span></span><span id="__span-1-12"><a id="__codelineno-1-12" name="__codelineno-1-12"></a></span><span id="__span-1-13"><a id="__codelineno-1-13" name="__codelineno-1-13"></a><span class="w"> </span><span class="k">if</span><span class="w"> </span><span class="p">((</span><span class="n">block</span><span class="p">.</span><span class="n">ProjectedShapes</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="n">BlockProjectedShapes</span><span class="p">.</span><span class="n">MiddleUpperTriangle</span><span class="p">)</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="m">0</span><span class="p">)</span></span><span id="__span-1-14"><a id="__codelineno-1-14" name="__codelineno-1-14"></a><span class="w"> </span><span class="p">{</span></span><span id="__span-1-15"><a id="__codelineno-1-15" name="__codelineno-1-15"></a><span class="w"> </span><span class="n">SetZMap</span><span class="p">(</span><span class="n">zMapUpper</span><span class="p">,</span><span class="w"> </span><span class="n">block</span><span class="p">.</span><span class="n">ProjectedXY</span><span class="p">,</span><span class="w"> </span><span class="n">block</span><span class="p">.</span><span class="n">ViewSpaceUpperCenterZ</span><span class="p">);</span></span><span id="__span-1-16"><a id="__codelineno-1-16" name="__codelineno-1-16"></a><span class="w"> </span><span class="p">}</span></span><span id="__span-1-17"><a id="__codelineno-1-17" name="__codelineno-1-17"></a></span><span id="__span-1-18"><a id="__codelineno-1-18" name="__codelineno-1-18"></a><span class="w"> </span><span class="k">if</span><span class="w"> </span><span class="p">((</span><span class="n">block</span><span class="p">.</span><span class="n">ProjectedShapes</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="n">BlockProjectedShapes</span><span class="p">.</span><span class="n">RightUpperTriangle</span><span class="p">)</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="m">0</span><span class="p">)</span></span><span id="__span-1-19"><a id="__codelineno-1-19" name="__codelineno-1-19"></a><span class="w"> </span><span class="p">{</span></span><span id="__span-1-20"><a id="__codelineno-1-20" name="__codelineno-1-20"></a><span class="w"> </span><span class="n">SetZMap</span><span class="p">(</span><span class="n">zMapLower</span><span class="p">,</span><span class="w"> </span><span class="n">block</span><span class="p">.</span><span class="n">ProjectedXY</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">Vector2Int</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">),</span><span class="w"> </span><span class="n">block</span><span class="p">.</span><span class="n">ViewSpaceUpperCenterZ</span><span class="p">);</span></span><span id="__span-1-21"><a id="__codelineno-1-21" name="__codelineno-1-21"></a><span class="w"> </span><span class="p">}</span></span><span id="__span-1-22"><a id="__codelineno-1-22" name="__codelineno-1-22"></a></span><span id="__span-1-23"><a id="__codelineno-1-23" name="__codelineno-1-23"></a><span class="w"> </span><span class="k">if</span><span class="w"> </span><span class="p">((</span><span class="n">block</span><span class="p">.</span><span class="n">ProjectedShapes</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="n">BlockProjectedShapes</span><span class="p">.</span><span class="n">LeftLowerTriangle</span><span class="p">)</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="m">0</span><span class="p">)</span></span><span id="__span-1-24"><a id="__codelineno-1-24" name="__codelineno-1-24"></a><span class="w"> </span><span class="p">{</span></span><span id="__span-1-25"><a id="__codelineno-1-25" name="__codelineno-1-25"></a><span class="w"> </span><span class="n">SetZMap</span><span class="p">(</span><span class="n">zMapUpper</span><span class="p">,</span><span class="w"> </span><span class="n">block</span><span class="p">.</span><span class="n">ProjectedXY</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">Vector2Int</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="o">-</span><span class="m">1</span><span class="p">),</span><span class="w"> </span><span class="n">block</span><span class="p">.</span><span class="n">ViewSpaceUpperCenterZ</span><span class="p">);</span></span><span id="__span-1-26"><a id="__codelineno-1-26" name="__codelineno-1-26"></a><span class="w"> </span><span class="p">}</span></span><span id="__span-1-27"><a id="__codelineno-1-27" name="__codelineno-1-27"></a></span><span id="__span-1-28"><a id="__codelineno-1-28" name="__codelineno-1-28"></a><span class="w"> </span><span class="k">if</span><span class="w"> </span><span class="p">((</span><span class="n">block</span><span class="p">.</span><span class="n">ProjectedShapes</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="n">BlockProjectedShapes</span><span class="p">.</span><span class="n">MiddleLowerTriangle</span><span class="p">)</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="m">0</span><span class="p">)</span></span><span id="__span-1-29"><a id="__codelineno-1-29" name="__codelineno-1-29"></a><span class="w"> </span><span class="p">{</span></span><span id="__span-1-30"><a id="__codelineno-1-30" name="__codelineno-1-30"></a><span class="w"> </span><span class="n">SetZMap</span><span class="p">(</span><span class="n">zMapLower</span><span class="p">,</span><span class="w"> </span><span class="n">block</span><span class="p">.</span><span class="n">ProjectedXY</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">Vector2Int</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="o">-</span><span class="m">1</span><span class="p">),</span><span class="w"> </span><span class="n">block</span><span class="p">.</span><span class="n">ViewSpaceUpperCenterZ</span><span class="p">);</span></span><span id="__span-1-31"><a id="__codelineno-1-31" name="__codelineno-1-31"></a><span class="w"> </span><span class="p">}</span></span><span id="__span-1-32"><a id="__codelineno-1-32" name="__codelineno-1-32"></a></span><span id="__span-1-33"><a id="__codelineno-1-33" name="__codelineno-1-33"></a><span class="w"> </span><span class="k">if</span><span class="w"> </span><span class="p">((</span><span class="n">block</span><span class="p">.</span><span class="n">ProjectedShapes</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="n">BlockProjectedShapes</span><span class="p">.</span><span class="n">RightLowerTriangle</span><span class="p">)</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="m">0</span><span class="p">)</span></span><span id="__span-1-34"><a id="__codelineno-1-34" name="__codelineno-1-34"></a><span class="w"> </span><span class="p">{</span></span><span id="__span-1-35"><a id="__codelineno-1-35" name="__codelineno-1-35"></a><span class="w"> </span><span class="n">SetZMap</span><span class="p">(</span><span class="n">zMapUpper</span><span class="p">,</span><span class="w"> </span><span class="n">block</span><span class="p">.</span><span class="n">ProjectedXY</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">Vector2Int</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="o">-</span><span class="m">1</span><span class="p">),</span><span class="w"> </span><span class="n">block</span><span class="p">.</span><span class="n">ViewSpaceUpperCenterZ</span><span class="p">);</span></span><span id="__span-1-36"><a id="__codelineno-1-36" name="__codelineno-1-36"></a><span class="w"> </span><span class="p">}</span></span><span id="__span-1-37"><a id="__codelineno-1-37" name="__codelineno-1-37"></a><span class="w"> </span><span class="p">}</span></span><span id="__span-1-38"><a id="__codelineno-1-38" name="__codelineno-1-38"></a></span><span id="__span-1-39"><a id="__codelineno-1-39" name="__codelineno-1-39"></a><span class="w"> </span><span class="k">foreach</span><span class="w"> </span><span class="p">(</span><span class="kt">var</span><span class="w"> </span><span class="n">block</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">bMap</span><span class="p">.</span><span class="n">Values</span><span class="p">.</span><span class="n">SelectMany</span><span class="p">(</span><span class="n">g</span><span class="w"> </span><span class="o">=&gt;</span><span class="w"> </span><span class="n">g</span><span class="p">))</span></span><span id="__span-1-40"><a id="__codelineno-1-40" name="__codelineno-1-40"></a><span class="w"> </span><span class="p">{</span></span><span id="__span-1-41"><a id="__codelineno-1-41" name="__codelineno-1-41"></a><span class="w"> </span><span class="k">if</span><span class="w"> </span><span class="p">((</span><span class="n">block</span><span class="p">.</span><span class="n">ProjectedShapes</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="n">BlockProjectedShapes</span><span class="p">.</span><span class="n">LeftUpperTriangle</span><span class="p">)</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="m">0</span><span class="w"> </span><span class="o">&amp;&amp;</span><span class="w"> </span><span class="n">block</span><span class="p">.</span><span class="n">ViewSpaceUpperCenterZ</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="n">zMapLower</span><span class="p">[</span><span class="n">block</span><span class="p">.</span><span class="n">ProjectedXY</span><span class="p">])</span></span><span id="__span-1-42"><a id="__codelineno-1-42" name="__codelineno-1-42"></a><span class="w"> </span><span class="p">{</span></span><span id="__span-1-43"><a id="__codelineno-1-43" name="__codelineno-1-43"></a><span class="w"> </span><span class="n">block</span><span class="p">.</span><span class="n">ProjectedShapes</span><span class="w"> </span><span class="o">&amp;=</span><span class="w"> </span><span class="o">~</span><span class="n">BlockProjectedShapes</span><span class="p">.</span><span class="n">LeftUpperTriangle</span><span class="p">;</span></span><span id="__span-1-44"><a id="__codelineno-1-44" name="__codelineno-1-44"></a><span class="w"> </span><span class="p">}</span></span><span id="__span-1-45"><a id="__codelineno-1-45" name="__codelineno-1-45"></a></span><span id="__span-1-46"><a id="__codelineno-1-46" name="__codelineno-1-46"></a><span class="w"> </span><span class="k">if</span><span class="w"> </span><span class="p">((</span><span class="n">block</span><span class="p">.</span><span class="n">ProjectedShapes</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="n">BlockProjectedShapes</span><span class="p">.</span><span class="n">MiddleUpperTriangle</span><span class="p">)</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="m">0</span><span class="w"> </span><span class="o">&amp;&amp;</span><span class="w"> </span><span class="n">block</span><span class="p">.</span><span class="n">ViewSpaceUpperCenterZ</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="n">zMapUpper</span><span class="p">[</span><span class="n">block</span><span class="p">.</span><span class="n">ProjectedXY</span><span class="p">])</span></span><span id="__span-1-47"><a id="__codelineno-1-47" name="__codelineno-1-47"></a><span class="w"> </span><span class="p">{</span></span><span id="__span-1-48"><a id="__codelineno-1-48" name="__codelineno-1-48"></a><span class="w"> </span><span class="n">block</span><span class="p">.</span><span class="n">ProjectedShapes</span><span class="w"> </span><span class="o">&amp;=</span><span class="w"> </span><span class="o">~</span><span class="n">BlockProjectedShapes</span><span class="p">.</span><span class="n">MiddleUpperTriangle</span><span class="p">;</span></span><span id="__span-1-49"><a id="__codelineno-1-49" name="__codelineno-1-49"></a><span class="w"> </span><span class="p">}</span></span><span id="__span-1-50"><a id="__codelineno-1-50" name="__codelineno-1-50"></a><span class="w"> </span><span class="p">}</span></span><span id="__span-1-51"><a id="__codelineno-1-51" name="__codelineno-1-51"></a><span class="p">}</span></span></code></pre></div></td></tr></tbody></table></div><p>最后删三角形时，只要考虑 Left Upper Triangle 和 Middle Upper Triangle，因为其他三角形与方块是否可以行走是无关的。</p><h3 id="构建无向图">构建无向图<a class="headerlink" href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#%E6%9E%84%E5%BB%BA%E6%97%A0%E5%90%91%E5%9B%BE" title="Permanent link">¶</a></h3><p>判断一个平行四边形格子是否可以行走的方法：遍历此处所有的方块，看看能不能凑出 Left Upper Triangle 和 Middle Upper Triangle。</p><div class="highlight"><table class="highlighttable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre><span></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-2-1"> 1</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-2-2"> 2</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-2-3"> 3</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-2-4"> 4</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-2-5"> 5</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-2-6"> 6</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-2-7"> 7</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-2-8"> 8</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-2-9"> 9</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-2-10">10</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-2-11">11</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-2-12">12</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-2-13">13</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-2-14">14</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-2-15">15</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-2-16">16</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-2-17">17</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-2-18">18</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-2-19">19</a></span><span class="normal"><a href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#__codelineno-2-20">20</a></span></pre></div></td><td class="code"><div><pre><span></span><code><span id="__span-2-1"><a id="__codelineno-2-1" name="__codelineno-2-1"></a><span class="k">public</span><span class="w"> </span><span class="kt">bool</span><span class="w"> </span><span class="n">IsWalkable</span></span><span id="__span-2-2"><a id="__codelineno-2-2" name="__codelineno-2-2"></a><span class="p">{</span></span><span id="__span-2-3"><a id="__codelineno-2-3" name="__codelineno-2-3"></a><span class="w"> </span><span class="k">get</span></span><span id="__span-2-4"><a id="__codelineno-2-4" name="__codelineno-2-4"></a><span class="w"> </span><span class="p">{</span></span><span id="__span-2-5"><a id="__codelineno-2-5" name="__codelineno-2-5"></a><span class="w"> </span><span class="n">BlockProjectedShapes</span><span class="w"> </span><span class="n">shapes</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">BlockProjectedShapes</span><span class="p">.</span><span class="n">None</span><span class="p">;</span></span><span id="__span-2-6"><a id="__codelineno-2-6" name="__codelineno-2-6"></a></span><span id="__span-2-7"><a id="__codelineno-2-7" name="__codelineno-2-7"></a><span class="w"> </span><span class="k">foreach</span><span class="w"> </span><span class="p">(</span><span class="kt">var</span><span class="w"> </span><span class="n">b</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">_blocks</span><span class="p">)</span></span><span id="__span-2-8"><a id="__codelineno-2-8" name="__codelineno-2-8"></a><span class="w"> </span><span class="p">{</span></span><span id="__span-2-9"><a id="__codelineno-2-9" name="__codelineno-2-9"></a><span class="w"> </span><span class="n">shapes</span><span class="w"> </span><span class="o">|=</span><span class="w"> </span><span class="n">b</span><span class="p">.</span><span class="n">ProjectedShapes</span><span class="p">;</span></span><span id="__span-2-10"><a id="__codelineno-2-10" name="__codelineno-2-10"></a></span><span id="__span-2-11"><a id="__codelineno-2-11" name="__codelineno-2-11"></a><span class="w"> </span><span class="c1">// Walkable = LeftUpperTriangle | MiddleUpperTriangle</span></span><span id="__span-2-12"><a id="__codelineno-2-12" name="__codelineno-2-12"></a><span class="w"> </span><span class="k">if</span><span class="w"> </span><span class="p">((</span><span class="n">shapes</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="n">BlockProjectedShapes</span><span class="p">.</span><span class="n">Walkable</span><span class="p">)</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">BlockProjectedShapes</span><span class="p">.</span><span class="n">Walkable</span><span class="p">)</span></span><span id="__span-2-13"><a id="__codelineno-2-13" name="__codelineno-2-13"></a><span class="w"> </span><span class="p">{</span></span><span id="__span-2-14"><a id="__codelineno-2-14" name="__codelineno-2-14"></a><span class="w"> </span><span class="k">return</span><span class="w"> </span><span class="k">true</span><span class="p">;</span></span><span id="__span-2-15"><a id="__codelineno-2-15" name="__codelineno-2-15"></a><span class="w"> </span><span class="p">}</span></span><span id="__span-2-16"><a id="__codelineno-2-16" name="__codelineno-2-16"></a><span class="w"> </span><span class="p">}</span></span><span id="__span-2-17"><a id="__codelineno-2-17" name="__codelineno-2-17"></a></span><span id="__span-2-18"><a id="__codelineno-2-18" name="__codelineno-2-18"></a><span class="w"> </span><span class="k">return</span><span class="w"> </span><span class="k">false</span><span class="p">;</span></span><span id="__span-2-19"><a id="__codelineno-2-19" name="__codelineno-2-19"></a><span class="w"> </span><span class="p">}</span></span><span id="__span-2-20"><a id="__codelineno-2-20" name="__codelineno-2-20"></a><span class="p">}</span></span></code></pre></div></td></tr></tbody></table></div><p>剩下的很简单，和普通的二维网格一样。</p><h2 id="寻路">寻路<a class="headerlink" href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#%E5%AF%BB%E8%B7%AF" title="Permanent link">¶</a></h2><p>寻路一定要找最短路，否则角色可能会在地图上绕来绕去。这个 Demo 里用 bfs 就行。</p><h2 id="找到正确的路径提示">找到正确的路径提示<a class="headerlink" href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#%E6%89%BE%E5%88%B0%E6%AD%A3%E7%A1%AE%E7%9A%84%E8%B7%AF%E5%BE%84%E6%8F%90%E7%A4%BA" title="Permanent link">¶</a></h2><p>小人行走前，会有个带拖尾的特效提前把路径展示出来。拖尾用 <code>TrailRenderer</code> 实现。</p><p>这里有个坑。直接给 <code>TrailRenderer</code> 应用小人移动的逻辑的话，因为地图部分地方有高度差，从相机看过去拖尾会断掉。</p><p><img alt="拖尾的 artifact" src="https://note.stalomeow.com/obsidian-vault/attachments/unity_hsr_dream_ticker_explain6.png"/></p><p>把移动时的 y 固定即可解决这个问题。</p><hr/><p>设某个方块的 <code>UpperCenter</code> 在 view space 为 <span class="arithmatex">\((x, y, z)^T\)</span>。给定一个 world space 里的 <span class="arithmatex">\(y&#39;\)</span>，需要找到 <span class="arithmatex">\(x&#39;\)</span> 和 <span class="arithmatex">\(z&#39;\)</span> 使得 <span class="arithmatex">\((x&#39;, y&#39;, z&#39;)^T\)</span> 变换到 view space 后 x 和 y 分量分别等于 <span class="arithmatex">\(x\)</span> 和 <span class="arithmatex">\(y\)</span>。</p><p>令 <code>worldToCameraMatrix</code> 等于</p><div class="arithmatex">\[\begin{bmatrix} x_1 &amp;x_2 &amp;x_3 &amp;x_4 \\ y_1 &amp;y_2 &amp;y_3 &amp;y_4 \\ z_1 &amp;z_2 &amp;z_3 &amp;z_4 \\ 0 &amp;0 &amp;0 &amp;1 \\\end{bmatrix}\]</div><p>可以列出方程</p><div class="arithmatex">\[\begin{bmatrix} x_1 &amp;x_2 &amp;x_3 &amp;x_4 \\ y_1 &amp;y_2 &amp;y_3 &amp;y_4 \\ z_1 &amp;z_2 &amp;z_3 &amp;z_4 \\ 0 &amp;0 &amp;0 &amp;1 \\\end{bmatrix} \begin{bmatrix} x&#39; \\ y&#39; \\ z&#39; \\ 1\end{bmatrix} = \begin{bmatrix} x \\ y \\ t \\ 1\end{bmatrix}\]</div><p>有三个变量 <span class="arithmatex">\(x&#39;,z&#39;,t\)</span>。解得</p><div class="arithmatex">\[\begin{bmatrix} x&#39; \\ z&#39; \\ t\end{bmatrix} = \begin{bmatrix} x_1 &amp;x_3 &amp;0 \\ y_1 &amp;y_3 &amp;0 \\ z_1 &amp;z_3 &amp;-1 \\\end{bmatrix}^{-1} \left ( \begin{bmatrix} x \\ y \\ 0\end{bmatrix} - y&#39;\begin{bmatrix} x_2 \\ y_2 \\ z_2\end{bmatrix} - \begin{bmatrix} x_4 \\ y_4 \\ z_4\end{bmatrix} \right )\]</div><p>把拖尾移动到 <span class="arithmatex">\((x&#39;, y&#39;, z&#39;)^T\)</span>（<span class="arithmatex">\(y&#39;\)</span> 是可配置的定值），就能避免断裂。</p><h2 id="这套算法的问题">这套算法的问题<a class="headerlink" href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#%E8%BF%99%E5%A5%97%E7%AE%97%E6%B3%95%E7%9A%84%E9%97%AE%E9%A2%98" title="Permanent link">¶</a></h2><ol><li>视角必须锁死</li><li>处理不了纪念碑谷中的 T-Junction。参考下面视频：</li></ol><div class="responsive-video-container"> <iframe width="560" height="315" src="https://www.youtube.com/embed/mCCC9hQm6MM?si=Df2R9I6B4kqWFM-C" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe></div><h2 id="更简单更泛用的方法">更简单更泛用的方法<a class="headerlink" href="https://note.stalomeow.com/blog/posts/unity-hsr-dream-ticker/#%E6%9B%B4%E7%AE%80%E5%8D%95%E6%9B%B4%E6%B3%9B%E7%94%A8%E7%9A%84%E6%96%B9%E6%B3%95" title="Permanent link">¶</a></h2><p>人工记录每种情况下的路径，程序根据不同情况选择路径，然后是正确答案就放个动画。</p><p>缺点是配置麻烦。</p></body></html>