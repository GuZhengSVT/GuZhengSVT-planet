<html><head></head><body><h2 id="简介"><a href="https://xeonds.github.io/2021/09/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/GCC%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8C%97/#%E7%AE%80%E4%BB%8B" class="headerlink" title="简介"></a>简介</h2><p>GCC是源自GNU项目的一个开源[[C·C++|C/C++]]编译器。和它同样出自GNU的还有GNU/Linux。关于GCC的说明，如果你使用的是Linux，那么其实在安装的时候，它的使用手册也已经被释放到你的电脑上了。只需要键入</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/></pre></td><td class="code"><pre><span class="line">root@xeonds:~<span class="comment"># man gcc</span></span><br/></pre></td></tr></tbody></table></figure><p>即可阅读它的使用手册（不过是全英文版的）。在文章最后，我会贴出我个人翻译的版本。</p><h2 id="用法"><a href="https://xeonds.github.io/2021/09/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/GCC%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8C%97/#%E7%94%A8%E6%B3%95" class="headerlink" title="用法"></a>用法</h2><p>一般用法很简单。只需输入：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/></pre></td><td class="code"><pre><span class="line">root@xeonds:~<span class="comment"># gcc hello.c</span></span><br/></pre></td></tr></tbody></table></figure><p>即可。如果没有报错，则不会有任何输出。此时会在当前目录生成<code>a.out</code>文件，即目标程序。</p><p>如果想更改目标文件的文件名，你还可以这么调用：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/></pre></td><td class="code"><pre><span class="line">root@xeonds:~<span class="comment"># gcc hello.c -o hello.exe</span></span><br/></pre></td></tr></tbody></table></figure><p>最终会生成<code>hello.exe</code>文件。</p><h2 id="常见问题"><a href="https://xeonds.github.io/2021/09/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/GCC%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8C%97/#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="undefined-reference-to-‘dlopen’"><a href="https://xeonds.github.io/2021/09/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/GCC%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8C%97/#undefined-reference-to-%E2%80%98dlopen%E2%80%99" class="headerlink" title="undefined reference to ‘dlopen’"></a>undefined reference to ‘dlopen’</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/><span class="line">9</span><br/><span class="line">10</span><br/></pre></td><td class="code"><pre><span class="line">$ gcc DBSim.c</span><br/><span class="line">/tmp/ccEdvduQ.o: In <span class="keyword">function</span> `main<span class="string">&#39;:</span></span><br/><span class="line"><span class="string"></span></span><br/><span class="line"><span class="string">DBSim.c:(.text+0x38): undefined reference to &#39;</span>dlopen<span class="string">&#39;</span></span><br/><span class="line"><span class="string">DBSim.c:(.text+0x55): undefined reference to &#39;</span>dlerror<span class="string">&#39;</span></span><br/><span class="line"><span class="string">DBSim.c:(.text+0x9c): undefined reference to &#39;</span>dlsym<span class="string">&#39;</span></span><br/><span class="line"><span class="string">DBSim.c:(.text+0xb7): undefined reference to &#39;</span>dlsym<span class="string">&#39;</span></span><br/><span class="line"><span class="string">DBSim.c:(.text+0xd2): undefined reference to &#39;</span>dlsym<span class="string">&#39;</span></span><br/><span class="line"><span class="string">DBSim.c:(.text+0x15d7): undefined reference to &#39;</span>dlclose<span class="string">&#39;</span></span><br/><span class="line"><span class="string">collect2: error: ld returned 1 exit status</span></span><br/></pre></td></tr></tbody></table></figure><p>解决方案：</p><ol><li>头文件添加：<code>#include &lt;dlfcn.h&gt;</code></li><li>编译选项里加 <code>-ldl</code>  即：<code> gcc DBSim.c -o DBSim -ldl</code></li></ol><hr/><h2 id="中文版文档（个人翻译）"><a href="https://xeonds.github.io/2021/09/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/GCC%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8C%97/#%E4%B8%AD%E6%96%87%E7%89%88%E6%96%87%E6%A1%A3%EF%BC%88%E4%B8%AA%E4%BA%BA%E7%BF%BB%E8%AF%91%EF%BC%89" class="headerlink" title="中文版文档（个人翻译）"></a>中文版文档（个人翻译）</h2><p><strong>名称</strong></p><p>gcc - 源于GNU项目的C/C++编译器</p><p><strong>概要</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/></pre></td><td class="code"><pre><span class="line">gcc [-c|-S|-E] [-std=standard]</span><br/><span class="line">    [-g] [-pg] [-Olevel]</span><br/><span class="line">    [-Wwarn...] [-Wpedantic]</span><br/><span class="line">    [-Idir...] [-Ldir...]</span><br/><span class="line">    [-Dmacro[=defn]...] [-Umacro]</span><br/><span class="line">    [-foption...] [-mmachine-option...]</span><br/><span class="line">    [-o outfile] [@file] infile...</span><br/></pre></td></tr></tbody></table></figure><p>只有最常用的选项被列出；其余选项请参阅后文。 <strong>g++<strong>接受和</strong>gcc</strong>几乎相同的选项。</p><p><strong>描述</strong></p><p>当你调用GCC时，它通常会进行预处理，编译，汇编和链接操作。这些“全部的”选项允许你将这个过程停止到中间阶段。例如，选项**<code>-c</code>**告诉编译器不要运行链接器。于是输出就由汇编器生成的object文件构成。</p><p>其他的选项被传递给一个或更多个编译阶段。一些选项控制预处理器，另一些选项控制编译器。然而其他的一些选项控制汇编器和链接器；它们中大多数未在此处列出，因为你极少会用到它们。</p><p>大多数你可以对GCC使用的命令行参数对于C程序而言都很有用；当一个参数只对一个语言（C++）有用时，说明文档会清楚地指出来。如果一个参数的描述没有提到源语言，那么你就可以在所有的支持语言中使用它。</p><p>运行GCC的一般方式是运行可执行程序<code>gcc</code>，或者当你运行交叉编译时是<code>machine-gcc</code>，又或者运行<code>machine-gcc-version</code>来执行某一特定版本的GCC。当你编译C++程序时，你应当使用<code>g++</code>来调用GCC。</p></body></html>